{"version":3,"sources":["components/App/components/Locations/images/arrow.svg","components/App/components/Categories/images/category.svg","components/App/redux/actions/Operator-actions.js","components/App/redux/actions/Data-actions.js","components/App/components/Locations/components/Location/Location.js","components/App/components/Locations/components/LocationViewer/components/MapContainer/MapContainer.js","components/App/components/Locations/components/LocationForm/LocationForm.js","components/App/components/Locations/components/LocationViewer/components/ViewerDialog/ViewerDialog.js","components/App/components/Locations/components/LocationViewer/components/PropertiesViewer/PropertiesViewer.js","components/App/components/Locations/components/LocationViewer/components/MapViewer/MapViewer.js","components/App/components/Locations/components/LocationViewer/LocationViewer.js","components/App/components/Locations/Locations.js","components/App/components/Categories/components/Category/Category.js","components/App/components/Categories/components/CategoryForm/CategoryForm.js","components/App/components/Categories/Categories.js","components/App/App.js","components/App/redux/reducers/Operator-reducer.js","components/App/redux/reducers/Data-reducer.js","components/App/redux/App-store.js","index.js","components/App/images/locations.svg","components/App/images/add.svg","components/App/images/edit.svg","components/App/images/remove.svg","components/App/images/categories.svg","components/App/components/Locations/images/copy.svg"],"names":["module","exports","__webpack_require__","p","setAction","action","type","payload","setSelectedCategory","name","setSelectedLocation","setUngroupedCategory","setViewMode","mode","updateLocationInput","input","setLocationDialogState","state","setCategoryDialogState","connect","operator","is_location_dialog_open","data","locations_count","dispatch","actions_operator","removeLocation","actions_data","props","react_default","a","createElement","className","concat","color","onClick","category","disableCurrentAction","input_location","lib_default","containerElement","style","height","mapElement","maxWidth","defaultPosition","lat","Number","lng","onChange","location","newInput","Object","objectSpread","address","position","updateCoords","categories_data","categories","selected_location","selected_category","addLocation","editLocation","formAddressContainerRef","useRef","formSubmitRef","inputRefs","formFilled","useEffect","fillControlledElements","current","classList","remove","updateFormFilled","userInputs","getLocationInputs","keys","filter","key","length","add","find","val","locations","value","forEach","handleChange","e","target","closeForm","onMouseDown","onSubmit","preventDefault","locationNameAlreadyExistsInCategory","toast","error","focus","timeoutAnimation","setTimeout","firstEmptyInputRef","currentInputRef","addressEmpty","i","info","htmlFor","data-name","required","ref","map","maxLength","placeholder","autoComplete","react_google_places_autocomplete_dist_default","initialValue","onSelect","suggestion","place_id","geocodeByPlaceId","then","results","geometry","catch","console","data-tip","userInput","re","RegExp","latPatternValid","match","lngPatternValid","_lat","_lng","latRangeValid","lngRangeValid","components_MapContainer_MapContainer","data-wait","dist_default","closeViewer","PropertiesViewer","fieldsRefs","coordinates","copyField","fieldToCopy","getAttribute","fieldText","innerText","replace","document","opacity","body","appendChild","select","execCommand","charAt","toUpperCase","slice","autoClose","src","copyIcon","copy","width","alt","GoogleApiWrapper","apiKey","mapContainerRef","firstChild","google_maps_react_dist","google","zoom","initialCenter","ungrouped_category","view_mode","_useState","useState","_useState2","slicedToArray","viewData","setViewData","getViewData","components_ViewerDialog_ViewerDialog","components_PropertiesViewer_PropertiesViewer","components_MapViewer_MapViewer","resetLocationInput","colors","arguments","undefined","currentTarget","ungroupCategory","clicked_category","locations_size","contains","toggleCategory","locationsIcon","swal","addIcon","warn","editIcon","removeIcon","arrowIcon","sort","location_name","j","components_Location_Location","components_LocationViewer_LocationViewer","components_LocationForm_LocationForm","is_category_dialog_open","removeCategory","removeFunc","numLocations","str","title","text","dangerMode","buttons","willRemove","categoryIcon","date","input_category","addCategory","editCategory","updateCategoryInput","setFormFilled","userInput_category","autoFocus","id","trim","resetCategoryInput","categoriesIcon","components_Category_Category","components_CategoryForm_CategoryForm","activeScreen","updateActiveScreen","screen","resetAction","activateScreen","nextScreen","components_Categories_Categories","components_Locations_Locations","screen-ref","react_toastify","hideProgressBar","operatorReducer","dataReducer","Date","toLocaleString","toConsumableArray","newLocation","defineProperty","updatedLocations","log","map_position","map_address","rootReducer","combineReducers","initialState","Delaware Beach House","Lincoln City Beach House","Long Island Beach House","Miami Beach House","Outer Banks Beach House","persistedState","localStorage","getItem","JSON","parse","store","createStore","subscribe","setItem","stringify","getState","AppErrorHandler","componentStack","ReactDOM","render","react_redux_es","es","history","hashHistory","commonjs_default","onError","path","component","App","getElementById"],"mappings":"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","file":"static/js/main.9aa2d16c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.cefc206c.svg\";","module.exports = __webpack_public_path__ + \"static/media/category.92509915.svg\";","export function activateScreen(screen) {\r\n    return { type: 'ACTIVATE_SCREEN', payload: screen };\r\n}\r\n\r\nexport function setAction(action) {\r\n    return { type: 'SET_ACTION', payload: action };\r\n}\r\n\r\nexport function resetAction() {\r\n    return { type: 'RESET_ACTION' }\r\n}","export function addCategory(name) {\r\n    return { type: 'ADD_CATEGORY', payload: name };\r\n}\r\n\r\nexport function addLocation(name) {\r\n    return { type: 'ADD_LOCATION', payload: name };\r\n}\r\n\r\nexport function editCategory(input) {\r\n    return { type: 'EDIT_CATEGORY', payload: input };\r\n}\r\n\r\nexport function editLocation(input) {\r\n    return { type: 'EDIT_LOCATION', payload: input };\r\n}\r\n\r\nexport function removeCategory(name) {\r\n    return { type: 'REMOVE_CATEGORY', payload: name };\r\n}\r\n\r\nexport function removeLocation(name) {\r\n    return { type: 'REMOVE_LOCATION', payload: name };\r\n}\r\n\r\nexport function resetCategoryInput() {\r\n    return { type: 'RESET_CATEGORY_INPUT' };\r\n}\r\n\r\nexport function resetLocationInput() {\r\n    return { type: 'RESET_LOCATION_INPUT' };\r\n}\r\n\r\nexport function setSelectedCategory(name) {\r\n    return { type: 'SET_SELECTED_CATEGORY', payload: name };\r\n}\r\n\r\nexport function setSelectedLocation(name) {\r\n    return { type: 'SET_SELECTED_LOCATION', payload: name };\r\n}\r\n\r\nexport function setUngroupedCategory(name) {\r\n    return { type: 'SET_UNGROUPED_CATEGPRY', payload: name };\r\n}\r\n\r\nexport function setViewMode(mode) {\r\n    return { type: 'SET_VIEW_MODE', payload: mode };\r\n}\r\n\r\nexport function updateCategoryInput(input) {\r\n    return { type: 'UPDATE_CATEGORY_INPUT', payload: input };\r\n}\r\n\r\nexport function updateLocationInput(input) {\r\n    return { type: 'UPDATE_LOCATION_INPUT', payload: input };\r\n}\r\n\r\nexport function updateMapPosition(position) {\r\n    return { type: 'UPDATE_MAP_POSITION', payload: position };\r\n}\r\n\r\nexport function updateMapAddress(address) {\r\n    return { type: 'UPDATE_MAP_ADDRESS', payload: address };\r\n}\r\n\r\nexport function setLocationDialogState(state) {\r\n    return { type: 'SET_LOCATION_DIALOG_STATE', payload: state };\r\n}\r\n\r\nexport function setCategoryDialogState(state) {\r\n    return { type: 'SET_CATEGORY_DIALOG_STATE', payload: state };\r\n}","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_operator from '../../../../redux/actions/Operator-actions';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\n\r\nconst Location = (props) => {\r\n\r\n    // This function handles location click according to the current action\r\n    const handleLocationClick = () => {\r\n        props.setSelectedLocation(props.name);\r\n\r\n        if (props.action !== '') { // action ADD/EDIT/REMOVE\r\n            props.setSelectedCategory(props.category);\r\n\r\n            if (props.action === 'REMOVE') {\r\n                props.removeLocation(props.name);\r\n\r\n                if (props.locations_count === 1) {\r\n                    props.disableCurrentAction(null, true);\r\n                    props.setUngroupedCategory('');\r\n                }\r\n            }\r\n        } else {\r\n            props.setAction('VIEW');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <h6 className={`category-item-location ${props.color} \r\n            ${!props.is_location_dialog_open ?\r\n                (props.action === 'EDIT' ?\r\n                    'shaking edit' : (props.action === 'REMOVE' ? 'shaking remove' : '')) : ''}`}\r\n            onClick={handleLocationClick}>{props.name}</h6>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        is_location_dialog_open: state.data.is_location_dialog_open,\r\n        locations_count: state.data.locations_count\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAction: (action) => dispatch(actions_operator.setAction(action)),\r\n        removeLocation: (name) => dispatch(actions_data.removeLocation(name)),\r\n        setSelectedLocation: (name) => dispatch(actions_data.setSelectedLocation(name)),\r\n        setSelectedCategory: (name) => dispatch(actions_data.setSelectedCategory(name)),\r\n        setUngroupedCategory: (name) => dispatch(actions_data.setUngroupedCategory(name))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);\r\n","import React from 'react';\r\nimport LocationPicker from 'react-location-picker';\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../../../redux/actions/Data-actions';\r\n\r\nconst MapContainer = (props) => {\r\n\r\n    // This function handles manual marker position change\r\n    // It updates the state and the coordinates input\r\n    const handleChange = (location) => {\r\n        let newInput = { ...props.input_location };\r\n        newInput.address = location.address;\r\n        newInput.lat = location.position.lat;\r\n        newInput.lng = location.position.lng;\r\n\r\n        props.updateLocationInput(newInput);\r\n        props.updateCoords();\r\n    }\r\n\r\n    return (\r\n        <LocationPicker\r\n            containerElement={<div style={{ height: '100%' }} />}\r\n            mapElement={<div style={{ maxWidth: '450px', height: '173px' }} />}\r\n            defaultPosition={{\r\n                lat: props.input_location.lat == null ?\r\n                    25.761681 : Number(props.input_location.lat),\r\n                lng: props.input_location.lng == null ?\r\n                    -80.191788 : Number(props.input_location.lng)\r\n            }}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        input_location: state.data.input_location\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateLocationInput: (input) => dispatch(actions_data.updateLocationInput(input))\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapContainer);\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\r\nimport { geocodeByPlaceId } from 'react-google-places-autocomplete';\r\nimport MapContainer from '../LocationViewer/components/MapContainer/MapContainer';\r\nimport '../../../../App.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\nconst LocationForm = (props) => {\r\n\r\n    const formAddressContainerRef = useRef();\r\n    const formSubmitRef = useRef();\r\n    const inputRefs = {\r\n        category: useRef(),\r\n        name: useRef(),\r\n        address: useRef(),\r\n        lat: useRef(),\r\n        lng: useRef()\r\n    };\r\n    let formFilled = false;\r\n\r\n    // On first mount, fill the form if opened on EDIT mode\r\n    useEffect(() => {\r\n        // If the used clicked 'EDIT', fill the form with the existing data\r\n        if (props.action === 'EDIT') {\r\n            fillControlledElements();\r\n            formSubmitRef.current.classList.remove('inactive');\r\n        }\r\n        props.setLocationDialogState(true);\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    // On every render, update 'formFilled'\r\n    useEffect(() => {\r\n        updateFormFilled();\r\n    });\r\n\r\n    const updateFormFilled = (() => {\r\n        // On update, set 'formFilled'\r\n        // This is used to bypass default functionality of <form/> element,\r\n        // with the aim of activating/deactivating the form submit button (style wise)\r\n        let userInputs = getLocationInputs();\r\n\r\n        //eslint-disable-next-line\r\n        formFilled = Object.keys(userInputs)\r\n            .filter((key) => { return !userInputs[key] || userInputs[key].length === 0 }).length === 0;\r\n\r\n        if (formFilled) {\r\n            formSubmitRef.current.classList.remove('inactive');\r\n        } else {\r\n            formSubmitRef.current.classList.add('inactive');\r\n        }\r\n    });\r\n\r\n    // This function fills the form with the existing location data\r\n    const fillControlledElements = () => {\r\n        const locationCategory = props.categories_data\r\n            .find(val => val.name === props.selected_category);\r\n        const location = locationCategory.locations[props.selected_location];\r\n\r\n\r\n        inputRefs.name.current.value = props.selected_location;\r\n        Object.keys(inputRefs).forEach((key) => {\r\n            if (key !== 'name' && key !== 'category') {\r\n                inputRefs[key].current.value = location[key];\r\n            }\r\n        });\r\n\r\n        let userInputs = {\r\n            category: props.selected_category,\r\n            name: props.selected_location,\r\n            address: location.address,\r\n            lat: location.lat,\r\n            lng: location.lng\r\n        }\r\n\r\n        props.updateLocationInput(userInputs);\r\n        formFilled = true;\r\n    }\r\n\r\n    // This function sets the coordinates input to state,\r\n    // which in turn locates the map's marker accordingly\r\n    const setCoords = () => {\r\n        const userInput = getLocationInputs();\r\n        const lat = inputRefs.lat.current.value;\r\n        const lng = inputRefs.lng.current.value;\r\n\r\n        const re = new RegExp(/^[-|+]?[0-9]*\\.?[0-9]+$/g);\r\n        const latPatternValid = lat.match(re), lngPatternValid = lng.match(re);\r\n        const patternValid = latPatternValid && lngPatternValid;\r\n\r\n\r\n        if (!patternValid) {\r\n\r\n            toast.error('Coordinates must be valid numbers');\r\n            setTimeout(() => {\r\n                toast.info('Press \\'SET\\' to revalidate');\r\n            }, 500);\r\n\r\n            if (!latPatternValid) {\r\n                inputRefs.lat.current.classList.add('input-error');\r\n                inputRefs.lat.current.focus();\r\n            }\r\n            if (!lngPatternValid) {\r\n                inputRefs.lng.current.classList.add('input-error');\r\n                if (latPatternValid) {\r\n                    inputRefs.lng.current.focus();\r\n                }\r\n            }\r\n        } else {\r\n            const _lat = Number(lat);\r\n            const _lng = Number(lng);\r\n            const latRangeValid = (_lat >= -90 && _lat <= 90), lngRangeValid = (_lng >= -180 && _lng <= 180);\r\n            const rangeValid = latRangeValid && lngRangeValid;\r\n\r\n            if (!rangeValid) {\r\n\r\n                if (!latRangeValid) {\r\n                    toast.error('Lat should be in the range of [-90, 90]');\r\n                    inputRefs.lat.current.classList.add('input-error');\r\n                    inputRefs.lat.current.focus();\r\n                }\r\n                if (!lngRangeValid) {\r\n                    toast.error('Lng should be in the range of [-180, 180]');\r\n                    inputRefs.lng.current.classList.add('input-error');\r\n                    if (latRangeValid) {\r\n                        inputRefs.lng.current.focus();\r\n                    }\r\n                }\r\n                setTimeout(() => {\r\n                    toast.info('Press \\'SET\\' to revalidate');\r\n                }, 500);\r\n\r\n            } else if (lat !== userInput.lat || lng !== userInput.lng) {\r\n\r\n                inputRefs.lat.current.classList.remove('input-error');\r\n                inputRefs.lng.current.classList.remove('input-error');\r\n\r\n                userInput.lat = lat;\r\n                userInput.lng = lng;\r\n\r\n                props.updateLocationInput(userInput);\r\n            }\r\n        }\r\n    }\r\n\r\n    // This function updates the coordinates inputs\r\n    // Triggered by subcomponent MapContainer \r\n    // (Each time the user moves the marker manually, this function is called)\r\n    const updateCoords = () => {\r\n        inputRefs.lat.current.classList.remove('input-error');\r\n        inputRefs.lng.current.classList.remove('input-error');\r\n        inputRefs.lat.current.value = props.input_location.lat;\r\n        inputRefs.lng.current.value = props.input_location.lng;\r\n    }\r\n\r\n    // This function gets the location inputs from state\r\n    const getLocationInputs = () => {\r\n        return {\r\n            category: props.input_location.category,\r\n            name: props.input_location.name,\r\n            address: props.input_location.address,\r\n            lat: props.input_location.lat,\r\n            lng: props.input_location.lng\r\n        }\r\n    }\r\n\r\n    // This nested function searches the coordinates of an address \r\n    // suggested from GoogleAutocomplete (address input) and when found,\r\n    // sets it to the coordinates input\r\n    const getGeoCodeFromPlaceId = (place_id) => {\r\n        geocodeByPlaceId(place_id)\r\n            .then(results => {\r\n                const location = results[0].geometry.location;\r\n                const lat = location.lat();\r\n                const lng = location.lng();\r\n\r\n                inputRefs.lat.current.value = lat;\r\n                inputRefs.lng.current.value = lng;\r\n                inputRefs.lat.current.classList.remove('input-error');\r\n                inputRefs.lng.current.classList.remove('input-error');\r\n\r\n                const newInput = {\r\n                    category: props.input_location.category,\r\n                    name: props.input_location.name,\r\n                    address: props.input_location.address,\r\n                    lat: lat,\r\n                    lng: lng\r\n                }\r\n                props.updateLocationInput(newInput);\r\n            })\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    // This function updates state with changed input\r\n    const handleChange = (e) => {\r\n        e.target.classList.remove('input-error');\r\n\r\n        let userInputs = getLocationInputs();\r\n        userInputs[e.target.name] = e.target.value;\r\n\r\n        props.updateLocationInput(userInputs);\r\n    }\r\n\r\n    // This function updates the coordinates according to an address suggestion\r\n    const handleSelect = (suggestion) => {\r\n        formAddressContainerRef.current.classList.remove('input-error');\r\n        getGeoCodeFromPlaceId(suggestion.place_id);\r\n    }\r\n\r\n    // This function handles form submit\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let userInputs = getLocationInputs();\r\n\r\n        // Form fully filled\r\n        if (formFilled) {\r\n\r\n            // Check if location name already exists in category\r\n            let locationNameAlreadyExistsInCategory = false;\r\n            Object.keys(props.categories_data.find(val => val.name === userInputs.category).locations).forEach((key) => {\r\n                if (key === userInputs.name && key !== props.selected_location) {\r\n                    locationNameAlreadyExistsInCategory = true;\r\n                }\r\n            })\r\n\r\n            // Add 'input-error' class and focus if needed\r\n            if (locationNameAlreadyExistsInCategory) {\r\n                inputRefs.name.current.classList.add('input-error');\r\n                toast.error('Location with this name already exists in this category!');\r\n                inputRefs.name.current.focus();\r\n            } else {\r\n                // Replace the original values of the coordinates if needed\r\n                let timeoutAnimation = false;\r\n                if (inputRefs.lat.current.value !== userInputs.lat) {\r\n                    inputRefs.lat.current.value = userInputs.lat;\r\n                    timeoutAnimation = true;\r\n                }\r\n                if (inputRefs.lng.current.value !== userInputs.lng) {\r\n                    inputRefs.lng.current.value = userInputs.lng;\r\n                    if (!timeoutAnimation) {\r\n                        timeoutAnimation = true;\r\n                    }\r\n                }\r\n\r\n                // Submit action\r\n                switch (props.action) {\r\n                    case 'ADD':\r\n                        props.addLocation(userInputs);\r\n                        break;\r\n                    case 'EDIT':\r\n                        props.editLocation(userInputs);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                // Close form\r\n                if (timeoutAnimation) {\r\n                    setTimeout(() => {\r\n                        closeForm();\r\n                    }, 50);\r\n                } else {\r\n                    closeForm();\r\n                }\r\n\r\n            }\r\n        } else { // Form not fully filled\r\n\r\n            // Add 'input-error' class to unfilled inputs\r\n            let firstEmptyInputRef, currentInputRef;\r\n            let addressEmpty = false;\r\n\r\n            Object.keys(userInputs).forEach((key, i) => {\r\n                if (!userInputs[key]) {\r\n\r\n                    if (key === 'address') {\r\n                        currentInputRef = formAddressContainerRef;\r\n                        addressEmpty = true;\r\n                    } else {\r\n                        currentInputRef = inputRefs[key];\r\n                    }\r\n\r\n                    currentInputRef.current.classList.add('input-error');\r\n\r\n                    if (!firstEmptyInputRef) {\r\n                        firstEmptyInputRef = currentInputRef;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Toast information to user\r\n            toast.error('Fill all fields first!');\r\n\r\n            if (addressEmpty) {\r\n                setTimeout(() => {\r\n                    toast.info('Note that Address is autocomplete only');\r\n                }, 500);\r\n            }\r\n\r\n            // Focus first unfilled input\r\n            firstEmptyInputRef.current.focus();\r\n        }\r\n    }\r\n\r\n    // This function closes the form\r\n    const closeForm = () => {\r\n        props.closeForm(null, true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"component-form-container\" onMouseDown={props.closeForm}>\r\n            <div className=\"component-form w-form\">\r\n                <form className=\"component-form-inner\" onSubmit={handleSubmit}>\r\n                    <div className='form-x-button-container'><h4 className='form-x-button' onClick={closeForm}>✖</h4></div>\r\n                    {props.action === 'ADD' && <label htmlFor=\"category\" className=\"form-field-label\">Location Category</label>}\r\n                    {props.action === 'ADD' &&\r\n                        <select data-name=\"category\" name=\"category\" required=\"\"\r\n                            className=\"select-field w-select\" onChange={handleChange} ref={inputRefs.category}>\r\n                            <option value=\"\">Select category...</option>\r\n                            {props.categories_data.map((category, i) => {\r\n                                return <option value={category.name} key={i}>{category.name}</option>\r\n                            })}\r\n                        </select>}\r\n                    <label htmlFor=\"name\" className=\"form-field-label\">Location Name</label>\r\n                    <input className=\"text-field-form w-input\" maxLength=\"256\" name=\"name\" data-name=\"name\"\r\n                        placeholder=\"My Beach House\" type=\"text\" required=\"\" autoComplete=\"off\" onChange={handleChange} ref={inputRefs.name} />\r\n                    <label htmlFor=\"address\" className=\"form-field-label\">Location Address</label>\r\n                    <div className=\"google-places-autocomplete-container\" ref={formAddressContainerRef}>\r\n                        <GooglePlacesAutocomplete maxLength=\"256\" name=\"address\" data-name=\"address\"\r\n                            placeholder=\"18555 Collins Ave, Sunny Isles Beach, FL\" type=\"text\" required=\"\" autoComplete=\"off\"\r\n                            initialValue={props.input_location.address} onSelect={handleSelect}\r\n                            onChange={handleChange} ref={inputRefs.address} /></div>\r\n                    <div className=\"component-form-coords\">\r\n                        <div className=\"component-form-coords-manual\">\r\n                            <label htmlFor=\"lat\" className=\"form-field-label\">lat</label>\r\n                            <input className=\"component-form-coords-textfield w-input\" maxLength=\"256\" name=\"lat\"\r\n                                data-name=\"lat\" placeholder=\"25.761681\" type=\"text\" required=\"\" autoComplete=\"off\" ref={inputRefs.lat} />\r\n                            <label htmlFor=\"lng\" className=\"form-field-label\">lng</label>\r\n                            <input className=\"component-form-coords-textfield w-input\" maxLength=\"256\" name=\"lng\"\r\n                                data-name=\"lng\" placeholder=\"-80.191788\" type=\"text\" required=\"\" autoComplete=\"off\" ref={inputRefs.lng} />\r\n                            <div className=\"component-form-coords-button\" data-tip=\"Set the marker position by coordinates\" onClick={setCoords}>SET</div>\r\n                        </div>\r\n                        <div className=\"component-form-coords-map\"><MapContainer updateCoords={updateCoords} /></div>\r\n                    </div>\r\n                    <input type=\"submit\" data-wait=\"Please wait...\"\r\n                        className=\"component-form-submit w-button inactive\" value=\"APPLY\" ref={formSubmitRef} />\r\n                </form>\r\n            </div>\r\n            <ReactTooltip />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        selected_location: state.data.selected_location,\r\n        selected_category: state.data.selected_category,\r\n        input_location: state.data.input_location\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addLocation: (name) => dispatch(actions_data.addLocation(name)),\r\n        editLocation: (input) => dispatch(actions_data.editLocation(input)),\r\n        updateLocationInput: (input) => dispatch(actions_data.updateLocationInput(input)),\r\n        setLocationDialogState: (state) => dispatch(actions_data.setLocationDialogState(state))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationForm);","import React from 'react';\r\nimport '../../LocationViewer.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../../../redux/actions/Data-actions';\r\n\r\nconst ViewerDialog = (props) => {\r\n\r\n    return (\r\n        <div className=\"view-location-dialog\">\r\n            <div className='viewer-dialog-x-button-container'><h4 className='viewer-dialog-x-button' onClick={props.closeViewer}>✖</h4></div>\r\n            <h5 className=\"heading-4\">{props.selected_location}</h5>\r\n            <div className=\"view-location-dialog-buttons\">\r\n                <button className=\"button w-button\" onClick={() => { props.setViewMode('properties'); }}>View Properties</button>\r\n                <button className=\"button w-button\" onClick={() => { props.setViewMode('map'); }}>View Map</button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        selected_location: state.data.selected_location\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setViewMode: (mode) => dispatch(actions_data.setViewMode(mode)),\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewerDialog);","import React, { useRef } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport copyIcon from '../../../../images/copy.svg';\r\n\r\nconst PropertiesViewer = (props) => {\r\n\r\n    const fieldsRefs = {\r\n        address: useRef(),\r\n        coordinates: useRef(),\r\n        category: useRef()\r\n    }\r\n\r\n    // This function copies a property field to clipboard\r\n    const copyField = (e) => {\r\n        const fieldToCopy = e.target.getAttribute('copy');\r\n        const fieldText = fieldsRefs[fieldToCopy].current.innerText.replace(/\\n/g, '');\r\n        const input = document.createElement('input');\r\n\r\n        input.style.opacity = '0';\r\n        input.style['pointer-events'] = 'none';\r\n        document.body.appendChild(input);\r\n        input.value = fieldText;\r\n        input.focus();\r\n        input.select();\r\n        document.execCommand('copy');\r\n        input.remove();\r\n\r\n        toast.info(`${fieldToCopy.charAt(0).toUpperCase()}${fieldToCopy.slice(1)} copied to clipboard!`, { autoClose: 1500 });\r\n    }\r\n\r\n    return (\r\n        <div className=\"view-location-properties\">\r\n            <h1 className=\"heading-location-viewer\">{props.data.name}</h1>\r\n            <div className=\"seperator-4\">\r\n            </div>\r\n            <h1 className=\"label\">Address</h1>\r\n            <div className=\"property-value-container\">\r\n                <img src={copyIcon} onClick={copyField} copy=\"address\" width=\"25\" data-tip=\"Copy\" alt=\"\" className=\"image-copy-property\" />\r\n                <h1 className=\"heading-location-property\" ref={fieldsRefs.address}>{props.data.address}</h1>\r\n            </div>\r\n            <h1 className=\"label\">Coordinates</h1>\r\n            <div className=\"property-value-container\">\r\n                <img src={copyIcon} onClick={copyField} copy=\"coordinates\" data-tip=\"Copy\" width=\"25\" alt=\"\" className=\"image-copy-property\" />\r\n                <h1 className=\"heading-location-property\" ref={fieldsRefs.coordinates}>\r\n                    <strong>lat</strong>:&nbsp;{props.data.position.lat}\r\n                    &#44;&nbsp;<strong>lng</strong>:{props.data.position.lng}</h1>\r\n            </div>\r\n            <h1 className=\"label\">Category</h1>\r\n            <div className=\"property-value-container\">\r\n                <img src={copyIcon} onClick={copyField} copy=\"category\" data-tip=\"Copy\" width=\"25\" alt=\"\" className=\"image-copy-property\" />\r\n\r\n                <h1 className=\"heading-location-property\" ref={fieldsRefs.category}>{props.data.category}</h1>\r\n            </div><button className=\"view-location-properties-button w-button\" onClick={props.closeViewer}>Close</button>\r\n            <ReactTooltip />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PropertiesViewer;","import React, { useEffect, useRef } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nconst MapViewer = (props) => {\r\n\r\n    const mapContainerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        mapContainerRef.current.firstChild.style = \"maxWidth: '435px;'\";\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"view-location-map\">\r\n            <h1 className=\"heading-location-viewer\">{props.data.name}</h1>\r\n            <div className=\"seperator-4\">\r\n            </div>\r\n            <div className=\"view-location-map-map-container\" ref={mapContainerRef}>\r\n                <Map\r\n                    google={props.google}\r\n                    zoom={18}\r\n                    style={{ height: '450px', position: 'relative' }}\r\n                    initialCenter={props.data.position}>\r\n                    <Marker position={props.data.position} />\r\n                </Map>\r\n            </div>\r\n            <button className=\"view-location-map-button w-button\" onClick={props.closeViewer}>Close</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GoogleApiWrapper({ apiKey: 'AIzaSyB_FOwuZf9hp8EzcKh1Dky70NBETQBO_a8' })(MapViewer);","import React, { useEffect, useState } from 'react';\r\nimport ViewerDialog from './components/ViewerDialog/ViewerDialog'\r\nimport PropertiesViewer from './components/PropertiesViewer/PropertiesViewer'\r\nimport MapViewer from './components/MapViewer/MapViewer';\r\nimport './LocationViewer.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\nconst LocationViewer = (props) => {\r\n\r\n    const [viewData, setViewData] = useState({});\r\n\r\n    useEffect(() => {\r\n        props.setViewMode('dialog');\r\n        setViewData(getViewData());\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    // This function gets the location data\r\n    // It is used to pass the data to subcomponents later on\r\n    const getViewData = () => {\r\n        const location = props.categories_data\r\n            .find(val => val.name === props.ungrouped_category)\r\n            .locations[props.selected_location];\r\n\r\n        return {\r\n            category: props.ungrouped_category,\r\n            name: props.selected_location,\r\n            address: location.address,\r\n            position: { lat: location.lat, lng: location.lng }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"view-location-container\" onMouseDown={props.closeViewer}>\r\n            {props.view_mode === 'dialog' && <ViewerDialog closeViewer={props.closeViewer} />}\r\n            {props.view_mode === 'properties' && <PropertiesViewer closeViewer={props.closeViewer} data={viewData} />}\r\n            {props.view_mode === 'map' && <MapViewer closeViewer={props.closeViewer} data={viewData} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories_data: state.data.categories,\r\n        selected_location: state.data.selected_location,\r\n        ungrouped_category: state.data.ungrouped_category,\r\n        view_mode: state.data.view_mode\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setViewMode: (mode) => dispatch(actions_data.setViewMode(mode))\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationViewer);","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport swal from 'sweetalert';\r\nimport Location from './components/Location/Location';\r\nimport LocationForm from './components/LocationForm/LocationForm';\r\nimport LocationViewer from './components/LocationViewer/LocationViewer';\r\nimport locationsIcon from '../../images/locations.svg';\r\nimport addIcon from '../../images/add.svg';\r\nimport editIcon from '../../images/edit.svg';\r\nimport removeIcon from '../../images/remove.svg';\r\nimport arrowIcon from './images/arrow.svg';\r\nimport './Locations.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_operator from '../../redux/actions/Operator-actions';\r\nimport * as actions_data from '../../redux/actions/Data-actions';\r\n\r\nconst Locations = (props) => {\r\n\r\n    const colors = ['blue', 'orange', 'red', 'purple', 'green'];\r\n\r\n    // This function sets/cancels 'ADD' action to state (for Add mode)\r\n    // Triggered by 'ADD' toolbar button\r\n    const addLocation = () => {\r\n        if (props.categories_data.length > 0) {\r\n            disableCurrentAction(null, true);\r\n            props.setAction('ADD');\r\n        } else { // No categories yet\r\n            swal('Before adding a location, please add at least 1 category through the Categories screen');\r\n        }\r\n\r\n    }\r\n\r\n    // This function sets/cancels 'EDIT' action to state (for Edit mode)\r\n    // Triggered by 'EDIT' toolbar button\r\n    const editLocation = () => {\r\n        if (props.locations_count > 0) {\r\n            if (props.action === 'EDIT') { // Cancel action\r\n                props.setAction('');\r\n            } else { // Set new action\r\n                disableCurrentAction(null, true);\r\n                props.setAction('EDIT');\r\n            }\r\n        } else { // No locations to edit yet\r\n            toast.warn('No locations to edit. Try adding one');\r\n        }\r\n    }\r\n\r\n    // This function sets/cancels 'REMOVE' action to state (for Remove mode)\r\n    // Triggered by 'REMOVE' toolbar button\r\n    const removeLocation = () => {\r\n        if (props.locations_count > 0) {\r\n            if (props.action === 'REMOVE') { // Cancel action\r\n                props.setAction('');\r\n            } else { // Set new action\r\n                disableCurrentAction(null, true);\r\n                props.setAction('REMOVE');\r\n            }\r\n        } else { // No locations to remove yet\r\n            toast.warn('No locations to remove. Try adding one');\r\n        }\r\n    }\r\n\r\n    // This function disables any action (ADD/EDIT/REMOVE)\r\n    const disableCurrentAction = (e, controlled = false) => {\r\n        if (controlled || e.target === e.currentTarget) {\r\n            props.setAction('');\r\n            props.setViewMode('');\r\n            props.setLocationDialogState(false);\r\n            props.setSelectedLocation('');\r\n            props.setSelectedCategory('');\r\n            props.resetLocationInput();\r\n        }\r\n    }\r\n\r\n    // This function ungroups a category\r\n    const ungroupCategory = (e) => {\r\n        const clicked_category = e.currentTarget.getAttribute('category');\r\n        const locations_size = Number(e.currentTarget.getAttribute('locations_size'));\r\n\r\n        // Only ungroup categories with locations\r\n        if (e.currentTarget.classList.contains('grouped') && locations_size > 0) {\r\n            props.setUngroupedCategory(clicked_category);\r\n        }\r\n    }\r\n\r\n    // This function toggles a category\r\n    const toggleCategory = (e) => {\r\n        let clicked_category = e.target.getAttribute('category');\r\n        let locations_size = Number(e.target.getAttribute('locations_size'));\r\n\r\n        if (props.ungrouped_category === clicked_category) { // Same category\r\n            props.setUngroupedCategory('');\r\n        } else if (e.target.classList.contains('grouped') && locations_size > 0) { // Different category\r\n            props.setUngroupedCategory(clicked_category);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"locations\">\r\n            <div className=\"component-header\">\r\n                <div className=\"component-header-icon-wrapper\">\r\n                    <img src={locationsIcon} width=\"25\" alt=\"\" /></div>\r\n                <h1 className=\"heading-component h1\">\r\n                    Locations</h1>\r\n                <div className=\"component-header-right-margin\"></div>\r\n            </div>\r\n            <div className=\"seperator-2\"></div>\r\n            <div className=\"component-toolbar\">\r\n                <div className={`custom-button ${props.action === 'ADD' ? 'active' : 'inactive'}`} onClick={addLocation}>\r\n                    <img src={addIcon} width=\"20\" alt=\"\" />\r\n                    <h3 className=\"custom-heading\">Add</h3>\r\n                </div>\r\n                <div className={`custom-button ${props.action === 'EDIT' ? 'active' : 'inactive'}`} onClick={editLocation}>\r\n                    <img src={editIcon} width=\"20\" alt=\"\" />\r\n                    <h3 className=\"custom-heading\">Edit</h3>\r\n                </div>\r\n                <div className={`custom-button ${props.action === 'REMOVE' ? 'active' : 'inactive'}`} onClick={removeLocation}>\r\n                    <img src={removeIcon} width=\"20\" alt=\"\" />\r\n                    <h3 className=\"custom-heading\">Remove</h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"seperator-3\"></div>\r\n            <div className=\"locations-list-container\">\r\n                {\r\n                    props.categories_data.length > 0 ?\r\n                        props.categories_data.map((category, i) => {\r\n                            return <div className={`category ${props.ungrouped_category === category.name ? 'ungrouped' : 'grouped'}`}\r\n                                key={i} category={category.name} locations_size={Object.keys(category.locations).length} onClick={ungroupCategory}>\r\n\r\n                                <div className={`category-header ${props.ungrouped_category === category.name ? 'ungrouped' : 'grouped'}`}\r\n                                    category={category.name} locations_size={Object.keys(category.locations).length} onClick={toggleCategory} >\r\n\r\n                                    <img src={arrowIcon} category={category.name} width=\"20\" alt=\"\" className={`image-arrow-${props.ungrouped_category === category.name ? 'ungrouped' : 'grouped'}`} />\r\n                                    <h1 category={category.name} className=\"h1 body heading-location-list-item\" >Categoy: {category.name}</h1>\r\n                                </div>\r\n\r\n                                {props.ungrouped_category === category.name ? <div className=\"category-body\">\r\n                                    {\r\n                                        Object.keys(category.locations).sort().map((location_name, j) => {\r\n                                            return <Location name={location_name} category={category.name} key={j}\r\n                                                color={colors[j % colors.length]} disableCurrentAction={disableCurrentAction} />;\r\n                                        })\r\n                                    }\r\n                                </div> :\r\n                                    <h6 className=\"category-item-sub-heading-2\">{Object.keys(category.locations).length} locations in this category</h6>}\r\n                            </div>\r\n                        }) :\r\n                        <div className=\"text-block\">No categories yet. Go back to the Categories and add one!</div>\r\n\r\n                }\r\n                {props.action === 'VIEW' && <LocationViewer closeViewer={disableCurrentAction} />}\r\n            </div>\r\n            {(props.action === 'ADD' || (props.action === 'EDIT' && props.selected_location)) && <LocationForm closeForm={disableCurrentAction} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        selected_location: state.data.selected_location,\r\n        ungrouped_category: state.data.ungrouped_category,\r\n        locations_count: state.data.locations_count\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAction: (action) => dispatch(actions_operator.setAction(action)),\r\n        setUngroupedCategory: (category) => dispatch(actions_data.setUngroupedCategory(category)),\r\n        setSelectedLocation: (name) => dispatch(actions_data.setSelectedLocation(name)),\r\n        setSelectedCategory: (name) => dispatch(actions_data.setSelectedCategory(name)),\r\n        setLocationDialogState: (state) => dispatch(actions_data.setLocationDialogState(state)),\r\n        setViewMode: (mode) => dispatch(actions_data.setViewMode(mode)),\r\n        resetLocationInput: () => dispatch(actions_data.resetLocationInput())\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations);","import React from 'react';\r\nimport swal from 'sweetalert';\r\nimport categoryIcon from '../../images/category.svg'\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\nconst Category = (props) => {\r\n\r\n\r\n    // This function handles location click according to the current action\r\n    const handleCategoryClick = () => {\r\n        if (props.action !== '') { // action ADD/EDIT/REMOVE\r\n            props.setSelectedCategory(props.name);\r\n\r\n            // If action is REMOVE and the category contains locations, \r\n            // ask the user for remove confirmation\r\n            if (props.action === 'REMOVE') {\r\n\r\n                // Define remove function\r\n                let removeFunc = () => {\r\n                    if (props.categories_data.length === 1) {\r\n                        props.disableCurrentAction(null, true);\r\n                    }\r\n                    props.removeCategory(props.name);\r\n                };\r\n\r\n                // Get number of locations in this category\r\n                let numLocations = Object.keys(props.categories_data.find(category => {\r\n                    return (category.name === props.name);\r\n                }).locations).length;\r\n                let str = numLocations > 1 ? 'locatios' : 'location';\r\n\r\n                // Display warning if nececssary\r\n                if (numLocations > 0) {\r\n                    swal({\r\n                        title: 'Are you sure?',\r\n                        text: `This category contains ${numLocations} ${str}. \r\n                        Removing it wiil also remove the ${str}. Proceed?`,\r\n                        dangerMode: true,\r\n                        buttons: ['Cancel', 'Remove']\r\n                    }).then((willRemove) => {\r\n                        if (willRemove) {\r\n                            removeFunc();\r\n                        }\r\n                    })\r\n                } else {\r\n                    removeFunc();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`category ${!props.is_category_dialog_open ?\r\n            (props.action === 'EDIT' ?\r\n                'shaking edit' : (props.action === 'REMOVE' ? 'shaking remove' : '')) : ''}`}\r\n            onClick={handleCategoryClick}>\r\n            <div className=\"category-header\"><img src={categoryIcon} width=\"30\" alt=\"\" />\r\n                <h1 className=\"heading-category-list-item h1 body\">{props.name}</h1>\r\n            </div>\r\n            <h6 className=\"category-item-sub-heading\">Created on: {props.date}</h6>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        is_category_dialog_open: state.data.is_category_dialog_open,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeCategory: (name) => dispatch(actions_data.removeCategory(name)),\r\n        setSelectedCategory: (name) => dispatch(actions_data.setSelectedCategory(name)),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport '../../../../App.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\nconst CategoryForm = (props) => {\r\n\r\n    const inputRefs = { name: useRef() };\r\n    const [formFilled, setFormFilled] = useState(props.action === 'EDIT');\r\n\r\n    useEffect(() => {\r\n        // If the used clicked 'EDIT', fill the form with the existing data\r\n        if (props.action === 'EDIT') {\r\n            inputRefs.name.current.value = props.selected_category;\r\n        }\r\n\r\n        props.setCategoryDialogState(true);\r\n    });\r\n\r\n    // This function updates state with changed input\r\n    const handleChange = (e) => {\r\n        inputRefs.name.current.classList.remove('input-error');\r\n        props.updateCategoryInput(e.target.value.trim());\r\n        setFormFilled(e.target.value && e.target.value.trim().length > 0);\r\n    }\r\n\r\n    // This function handles form submit\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let userInput_category = props.input_category || props.selected_category;\r\n\r\n        // Form fully filled\r\n        if (formFilled) {\r\n            let inputChanged = userInput_category !== props.selected_category;\r\n\r\n            // Input did not change, close form\r\n            if (!inputChanged) {\r\n                closeForm();\r\n            } else { // Input changed\r\n\r\n                // Check if location name already exists in category\r\n                if (props.categories_data.find(val => val.name === userInput_category)) {\r\n                    inputRefs.name.current.classList.add('input-error');\r\n                    toast.error('Category with this name already exists!');\r\n                    inputRefs.name.current.focus();\r\n                } else {\r\n\r\n                    // Submit action\r\n                    switch (props.action) {\r\n                        case 'ADD':\r\n                            props.addCategory(userInput_category);\r\n                            break;\r\n                        case 'EDIT':\r\n                            props.editCategory(userInput_category);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    // Close form\r\n                    closeForm();\r\n                }\r\n            }\r\n\r\n        } else { // Form not fully filled\r\n\r\n            // Add 'input-error' class to the unfilled input, toast information & focus\r\n            inputRefs.name.current.classList.add('input-error');\r\n            toast.error('Empty input!', { autoClose: 1500 });\r\n            inputRefs.name.current.focus();\r\n        }\r\n    }\r\n\r\n    // This function closes the form\r\n    const closeForm = () => {\r\n        props.closeForm(null, true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"component-form-container\" onMouseDown={props.closeForm}>\r\n            <div className=\"component-form w-form\">\r\n                <form className=\"component-form-inner\" onSubmit={handleSubmit}>\r\n                    <div className='form-x-button-container'><h4 className='form-x-button' onClick={closeForm}>✖</h4></div>\r\n                    <label htmlFor=\"name\" className=\"form-field-label\">Category Name</label>\r\n                    <input className=\"text-field-form w-input\" autoFocus={true} maxLength=\"256\"\r\n                        name=\"name\" data-name=\"Name\" placeholder=\"&quot;My Beach Houses&quot;\" type=\"text\"\r\n                        id=\"name\" required=\"\" autoComplete=\"off\" onChange={handleChange} ref={inputRefs.name} />\r\n                    <input type=\"submit\" data-wait=\"Please wait...\"\r\n                        className={`component-form-submit w-button ${formFilled ? 'active' : 'inactive'}`} value=\"OK\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        input_category: state.data.input_category,\r\n        selected_category: state.data.selected_category\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addCategory: (name) => dispatch(actions_data.addCategory(name)),\r\n        editCategory: (input) => dispatch(actions_data.editCategory(input)),\r\n        updateCategoryInput: (input) => dispatch(actions_data.updateCategoryInput(input)),\r\n        setCategoryDialogState: (state) => dispatch(actions_data.setCategoryDialogState(state))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryForm);","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport Category from './components/Category/Category';\r\nimport CategoryForm from './components/CategoryForm/CategoryForm';\r\nimport categoriesIcon from '../../images/categories.svg';\r\nimport addIcon from '../../images/add.svg';\r\nimport editIcon from '../../images/edit.svg';\r\nimport removeIcon from '../../images/remove.svg';\r\nimport './Categories.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_operator from '../../redux/actions/Operator-actions';\r\nimport * as actions_data from '../../redux/actions/Data-actions';\r\n\r\nconst Categories = (props) => {\r\n\r\n    // This function sets/cancels 'ADD' action to state (for Add mode)\r\n    // Triggered by 'ADD' toolbar button\r\n    const addCategory = () => {\r\n        disableCurrentAction(null, true);\r\n        props.setAction('ADD');\r\n    }\r\n\r\n    // This function sets/cancels 'EDIT' action to state (for Edit mode)\r\n    // Triggered by 'EDIT' toolbar button\r\n    const editCategory = () => {\r\n        if (props.categories_data.length > 0) {\r\n            if (props.action === 'EDIT') { // Cancel action\r\n                props.setAction('');\r\n            } else { // Set new action\r\n                disableCurrentAction(null, true);\r\n                props.setAction('EDIT');\r\n            }\r\n        } else { // No locations to edit yet\r\n            toast.warn('No categories to edit. Try adding one');\r\n        }\r\n    }\r\n\r\n    // This function sets/cancels 'REMOVE' action to state (for Remove mode)\r\n    // Triggered by 'REMOVE' toolbar button\r\n    const removeCategory = (e) => {\r\n        if (props.categories_data.length > 0) {\r\n            if (props.action === 'REMOVE') { // Cancel action\r\n                props.setAction('');\r\n            } else { // Set new action\r\n                disableCurrentAction(null, true);\r\n                props.setAction('REMOVE');\r\n            }\r\n        } else { // No locations to remove yet\r\n            toast.warn('No categories to remove. Try adding one');\r\n        }\r\n    }\r\n\r\n    // This function disables any action (ADD/EDIT/REMOVE)\r\n    const disableCurrentAction = (e, controlled = false) => {\r\n        if (controlled || e.target === e.currentTarget) {\r\n            props.setAction('');\r\n            props.setCategoryDialogState(false);\r\n            props.setSelectedCategory('');\r\n            props.resetCategoryInput();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"categories\">\r\n            <div className=\"component-header\">\r\n                <div className=\"component-header-icon-wrapper\">\r\n                    <img src={categoriesIcon} width=\"25\" alt=\"\" /></div>\r\n                <h1 className=\"heading-component h1\">\r\n                    Categories</h1>\r\n                <div className=\"component-header-right-margin\"></div>\r\n            </div>\r\n            <div className=\"seperator-2\"></div>\r\n            <div className=\"component-toolbar\">\r\n                <div className={`custom-button ${props.action === 'ADD' ? 'active' : 'inactive'}`} onClick={addCategory}>\r\n                    <img src={addIcon} width=\"20\" alt=\"\" />\r\n                    <h3 className=\"custom-heading\">Add</h3>\r\n                </div>\r\n                <div className={`custom-button ${props.action === 'EDIT' ? 'active' : 'inactive'}`} onClick={editCategory}>\r\n                    <img src={editIcon} width=\"20\" alt=\"\" />\r\n                    <h3 className=\"custom-heading\">Edit</h3>\r\n                </div>\r\n                <div className={`custom-button ${props.action === 'REMOVE' ? 'active' : 'inactive'}`} onClick={removeCategory}>\r\n                    <img src={removeIcon} width=\"20\" alt=\"\" />\r\n                    <h3 className=\"custom-heading\">Remove</h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"seperator-3\"></div>\r\n            <div className=\"categories-list-container\">\r\n                {props.categories_data.length > 0 ?\r\n                    props.categories_data.map((category, i) => {\r\n                        return <Category name={category.name} date={category.date} key={i} disableCurrentAction={disableCurrentAction} />\r\n                    }) :\r\n                    <div className=\"text-block\">No categories yet. Click the 'Add' button above</div>}\r\n            </div>\r\n            {(props.action === 'ADD' || (props.action === 'EDIT' && props.selected_category)) && <CategoryForm closeForm={disableCurrentAction} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        selected_category: state.data.selected_category,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAction: (action) => dispatch(actions_operator.setAction(action)),\r\n        setSelectedCategory: (name) => dispatch(actions_data.setSelectedCategory(name)),\r\n        setCategoryDialogState: (state) => dispatch(actions_data.setCategoryDialogState(state)),\r\n        resetCategoryInput: () => dispatch(actions_data.resetCategoryInput())\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","import React, { useEffect } from 'react';\nimport Locations from './components/Locations/Locations';\nimport Categories from './components/Categories/Categories';\nimport categoriesIcon from './images/categories.svg';\nimport locationsIcon from './images/locations.svg';\nimport './App.css';\n\nimport { ToastContainer } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport * as actions_operator from './redux/actions/Operator-actions';\n\nconst App = (props) => {\n\n  useEffect(() => {\n    document.title = 'myLocations';\n  }, []);\n\n  // This function activates a screen (for example Categories/Locations)\n  // Called from onClick listeners of the pages' icons\n  const activateScreen = (ref) => {\n\n    const target = ref.current || ref.currentTarget;\n    const nextScreen = target.getAttribute('screen-ref');\n\n    // Only activate an inactive screen\n    if (nextScreen !== props.activeScreen) {\n      props.updateActiveScreen(nextScreen);\n\n      // Reset 'action' if icon clicked during an action (ADD/EDIT/REMOVE)\n      if (props.action !== '') {\n        props.resetAction();\n      }\n\n    }\n  }\n\n  return (\n    <div className=\"app-body\">\n      <div className=\"ml-container\">\n        <div className=\"component-container\">\n          {props.activeScreen === 'Categories' && <Categories />}\n          {props.activeScreen === 'Locations' && <Locations />}\n        </div>\n        <div className=\"seperator\"></div>\n        <div className=\"bottom-toolbar\">\n          <div className={`bottom-icon-wrapper ${props.activeScreen === 'Categories' ?\n            'active' : 'inactive'}`} onClick={activateScreen} screen-ref=\"Categories\">\n            <img src={categoriesIcon} width=\"40\" alt=\"\" className=\"icon-bottom\" />\n            <div className=\"icon-bottom-underline\"></div>\n          </div>\n          <div className={`bottom-icon-wrapper ${props.activeScreen === 'Locations' ?\n            'active' : 'inactive'}`} onClick={activateScreen} screen-ref=\"Locations\">\n            <img src={locationsIcon} width=\"40\" alt=\"\" className=\"icon-bottom\" />\n            <div className=\"icon-bottom-underline\"></div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer hideProgressBar={true} autoClose={4500} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeScreen: state.operator.activeScreen,\n    action: state.operator.action\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateActiveScreen: (screen) => dispatch(actions_operator.activateScreen(screen)),\n    resetAction: () => dispatch(actions_operator.resetAction())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const operatorReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'ACTIVATE_SCREEN':\r\n            state = { ...state, activeScreen: action.payload };\r\n            break;\r\n        case 'SET_ACTION':\r\n            state = { ...state, action: action.payload };\r\n            break;\r\n        case 'RESET_ACTION':\r\n            state = { ...state, action: '' };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default operatorReducer;","\r\nconst dataReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD_CATEGORY':\r\n            state = {\r\n                ...state,\r\n                categories: [{\r\n                    name: action.payload,\r\n                    locations: {},\r\n                    date: new Date().toLocaleString()\r\n                }, ...state.categories]\r\n            };\r\n            break;\r\n        case 'ADD_LOCATION':\r\n            state = {\r\n                ...state,\r\n                categories: state.categories.map((val) => {\r\n                    if (val.name === action.payload.category) {\r\n                        let newLocation = {\r\n                            address: action.payload.address,\r\n                            lat: action.payload.lat,\r\n                            lng: action.payload.lng\r\n                        }\r\n                        return { ...val, locations: { ...val.locations, [action.payload.name]: newLocation } };\r\n                    } else {\r\n                        return { ...val };\r\n                    }\r\n                }),\r\n                locations_count: state.locations_count + 1\r\n            };\r\n            break;\r\n        case 'EDIT_CATEGORY':\r\n            state = {\r\n                ...state,\r\n                categories: state.categories.map((val) => {\r\n                    return {\r\n                        ...val, name: val.name === state.selected_category ?\r\n                            action.payload : val.name\r\n                    };\r\n                })\r\n            };\r\n            break;\r\n        case 'EDIT_LOCATION':\r\n            state = {\r\n                ...state,\r\n                categories: state.categories.map((val) => {\r\n                    if (val.name === action.payload.category) {\r\n                        let updatedLocations = { ...val.locations };\r\n                        delete updatedLocations[state.selected_location];\r\n\r\n                        updatedLocations[action.payload.name] = {\r\n                            address: action.payload.address,\r\n                            lat: action.payload.lat,\r\n                            lng: action.payload.lng\r\n                        }\r\n                        val['locations'] = updatedLocations;\r\n                    }\r\n                    return { ...val };\r\n                }),\r\n\r\n            };\r\n            break;\r\n        case 'REMOVE_CATEGORY':\r\n            let numLocations = Object.keys(state.categories.find(category => \r\n                { return (category.name === action.payload); }).locations).length;\r\n\r\n            state = {\r\n                ...state,\r\n                categories: state.categories.filter(val => val.name !== action.payload),\r\n                locations_count: state.locations_count - numLocations\r\n            };\r\n            break;\r\n        case 'REMOVE_LOCATION':\r\n            state = {\r\n                ...state,\r\n                categories: state.categories.map((val) => {\r\n                    if (val.name === state.selected_category) {\r\n                        let updatedLocations = { ...val.locations };\r\n                        delete updatedLocations[state.selected_location];\r\n                        val['locations'] = updatedLocations;\r\n                    }\r\n                    return { ...val };\r\n                }),\r\n                locations_count: state.locations_count - 1\r\n            };\r\n            break;\r\n        case 'RESET_CATEGORY_INPUT':\r\n            state = { ...state, input_category: '' };\r\n            break;\r\n        case 'RESET_LOCATION_INPUT':\r\n            state = { ...state, input_location: {} };\r\n            break;\r\n        case 'SET_SELECTED_CATEGORY':\r\n            state = { ...state, selected_category: action.payload };\r\n            break;\r\n        case 'SET_SELECTED_LOCATION':\r\n            state = { ...state, selected_location: action.payload };\r\n            break;\r\n        case 'SET_UNGROUPED_CATEGPRY':\r\n            state = { ...state, ungrouped_category: action.payload };\r\n            break;\r\n        case 'SET_LOCATION_DIALOG_STATE':\r\n            state = { ...state, is_location_dialog_open: action.payload };\r\n            break;\r\n        case 'SET_CATEGORY_DIALOG_STATE':\r\n            state = { ...state, is_category_dialog_open: action.payload };\r\n            break;\r\n        case 'SET_VIEW_MODE':\r\n            state = { ...state, view_mode: action.payload };\r\n            break;\r\n        case 'UPDATE_CATEGORY_INPUT':\r\n            state = { ...state, input_category: action.payload };\r\n            break;\r\n        case 'UPDATE_LOCATION_INPUT':\r\n            console.log('sesms ok');\r\n            state = { ...state, input_location: action.payload };\r\n            break;\r\n        case 'UPDATE_MAP_POSITION':\r\n            state = { ...state, map_position: action.payload };\r\n            break;\r\n        case 'UPDATE_MAP_ADDRESS':\r\n            state = { ...state, map_address: action.payload };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default dataReducer;","import { combineReducers, createStore } from 'redux';\r\nimport operatorReducer from './reducers/Operator-reducer';\r\nimport dataReducer from './reducers/Data-reducer';\r\n\r\n// Combine reducers\r\nconst rootReducer = combineReducers({\r\n    operator: operatorReducer,\r\n    data: dataReducer\r\n});\r\n\r\n// Set initial state\r\nconst initialState = {\r\n    operator: {\r\n        activeScreen: 'Categories',\r\n        action: ''\r\n    },\r\n    data: {\r\n        categories: [{\r\n            date: '31.7.2019, 17:11:43',\r\n            locations: {\r\n                'Delaware Beach House': {\r\n                    address: '51 Baltimore Ave, Rehoboth Beach, DE 19971, USA',\r\n                    lat: 38.7171603,\r\n                    lng: -75.0812477,\r\n                },\r\n                'Lincoln City Beach House': {\r\n                    address: '4567 SW Beach Ave, Lincoln City, OR 97367, USA',\r\n                    lat: 44.9319352,\r\n                    lng: -124.02391790000001,\r\n                },\r\n                'Long Island Beach House': {\r\n                    address: '55 S Elmwood Ave, Montauk, NY 11954, USA',\r\n                    lat: 41.0339355,\r\n                    lng: -71.94328710000002\r\n                },\r\n                'Miami Beach House': {\r\n                    address: '200 S Biscayne Blvd, Miami, FL 33131, USA',\r\n                    lat: 25.7721982,\r\n                    lng: -80.1881477\r\n                },\r\n                'Outer Banks Beach House': {\r\n                    address: '42050 Cedar Cir, Avon, NC 27915, USA',\r\n                    lat: 35.3305316,\r\n                    lng: -75.50870980000002\r\n                }\r\n            },\r\n            name: 'My Beach Houses (Example)'\r\n        }],\r\n        locations_count: 5,\r\n        input_category: '',\r\n        view_mode: '',\r\n        input_location: {},\r\n        selected_category: '',\r\n        selected_location: '',\r\n        ungrouped_category: 'My Beach Houses (Example)',\r\n        is_category_dialog_open: false,\r\n        is_location_dialog_open: false\r\n    }\r\n}\r\n\r\n// Set state: if previous state exists in local storage load it, \r\n// otherwise set initialState\r\nconst persistedState = localStorage.getItem('reduxState') ?\r\n    JSON.parse(localStorage.getItem('reduxState')) : initialState;\r\n\r\nconst resetStoreState = () => {\r\n    localStorage.setItem('reduxState', JSON.stringify(initialState));\r\n}\r\n\r\n// Create store\r\nconst store = createStore(rootReducer, persistedState);\r\n\r\n// Subscribe to store state changes and save each new state to local storage\r\nstore.subscribe(() => {\r\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()));\r\n});\r\n\r\nexport { resetStoreState, store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ErrorBoundary from 'react-error-boundary';\nimport { Router, Route, hashHistory } from 'react-router';\nimport swal from 'sweetalert';\nimport App from './components/App/App';\nimport './index.css';\n\nimport { Provider } from 'react-redux'\nimport { store, resetStoreState } from './components/App/redux/App-store'\n\n// This component is responsible for assigning Routes to different pages.\n// In our case, we will assign a single Route to App\n// If we want to add more pages in the future, we will assign them a Route from here\nconst Root = () => {\n    return(\n        // Note that because this app is deployed to GitHub Pages,\n        // hashHistory is used instead of browserHistory\n        <Router history={hashHistory}>\n            <ErrorBoundary onError={AppErrorHandler}>\n                <Route path='/' component={App}></Route>\n                {/* ... More Routes */}\n            </ErrorBoundary>\n        </Router>\n    );\n}\n\n// Since every state update is saved to local storage, \n// App is bounded by Error Boundary. On any error, local storage\n// will be cleaned\nconst AppErrorHandler = (error, componentStack) => {\n    resetStoreState();\n    swal('Unfortunately the application has crashed. Local storage was restored to its initial state');\n};\n\n// Render Root\nReactDOM.render(<Provider store={store}><Root /></Provider>, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/locations.2077207c.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.b969e9fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.a58d3d11.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.6690bdd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/categories.a8fb9acf.svg\";","module.exports = __webpack_public_path__ + \"static/media/copy.add831dd.svg\";"],"sourceRoot":""}