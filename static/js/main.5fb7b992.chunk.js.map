{"version":3,"sources":["components/App/components/Locations/images/arrow.svg","components/App/components/Categories/images/category.svg","components/App/redux/actions/Operator-actions.js","components/App/redux/actions/Data-actions.js","components/App/components/Locations/components/Location/Location.js","components/App/components/Locations/components/LocationViewer/components/MapContainer/MapContainer.js","components/App/components/Locations/components/LocationForm/LocationForm.js","components/App/components/Locations/components/LocationViewer/components/ViewerDialog/ViewerDialog.js","components/App/components/Locations/components/LocationViewer/components/PropertiesViewer/PropertiesViewer.js","components/App/components/Locations/components/LocationViewer/components/MapViewer/MapViewer.js","components/App/components/Locations/components/LocationViewer/LocationViewer.js","components/App/components/Locations/Locations.js","components/App/components/Categories/components/Category/Category.js","components/App/components/Categories/components/CategoryForm/CategoryForm.js","components/App/components/Categories/Categories.js","components/App/App.js","components/App/redux/reducers/Operator-reducer.js","components/App/redux/reducers/Data-reducer.js","components/App/redux/App-store.js","index.js","components/App/images/locations.svg","components/App/images/add.svg","components/App/images/edit.svg","components/App/images/remove.svg","components/App/images/categories.svg","components/App/components/Locations/images/copy.svg"],"names":["module","exports","__webpack_require__","p","setAction","action","type","payload","setSelectedCategory","name","setSelectedLocation","setViewMode","mode","updateLocationInput","input","setLocationDialogState","state","setCategoryDialogState","Location","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleLocationClick","bind","assertThisInitialized","category","removeLocation","Vibration","vibrate","react_default","a","createElement","className","concat","color","is_location_dialog_open","onClick","Component","connect","operator","data","dispatch","actions_operator","actions_data","MapContainer","handleChange","location","newInput","objectSpread","input_location","address","lat","position","lng","updateCoords","lib_default","containerElement","style","height","mapElement","maxWidth","defaultPosition","onChange","LocationForm","inputRefs","React","createRef","formContainerRef","formAddressContainerRef","formSubmitRef","fillControlledElements","handleSubmit","handleSelect","setCoords","getLocationInputs","getGeoCodeFromPlaceId","formFilled","current","classList","remove","userInputs","keys","filter","key","length","add","_this2","categories_data","find","val","selected_category","locations","selected_location","value","forEach","userInput","re","RegExp","latValid","match","lngValid","toast","error","setTimeout","info","focus","place_id","_this3","geocodeByPlaceId","then","results","geometry","catch","console","e","target","suggestion","_this4","preventDefault","locationNameAlreadyExistsInCategory","swal","timeoutAnimation","addLocation","editLocation","closeForm","firstEmptyInputRef","currentInputRef","addressEmpty","i","onMouseDown","ref","onSubmit","htmlFor","data-name","required","map","maxLength","placeholder","autoComplete","react_google_places_autocomplete_dist_default","initialValue","onSelect","data-tip","components_MapContainer_MapContainer","data-wait","dist_default","categories","ViewerDialog","PropertiesViewer","copyField","fieldsRefs","coordinates","fieldToCopy","getAttribute","fieldText","innerText","replace","document","opacity","body","appendChild","select","execCommand","charAt","toUpperCase","slice","autoClose","src","copyIcon","copy","width","alt","MapViewer","mapContainerRef","firstChild","google_maps_react_dist","google","zoom","initialCenter","GoogleApiWrapper","apiKey","LocationViewer","getViewData","ungrouped_category","view_mode","components_ViewerDialog_ViewerDialog","components_PropertiesViewer_PropertiesViewer","components_MapViewer_MapViewer","Locations","disableCurrentAction","ungroupCategory","toggleCategory","colors","locations_count","warn","arguments","undefined","currentTarget","resetLocationInput","clicked_category","locations_size","Number","contains","setUngroupedCategory","locationsIcon","addIcon","editIcon","removeIcon","arrowIcon","sort","location_name","j","components_Location_Location","components_LocationViewer_LocationViewer","components_LocationForm_LocationForm","Category","handleCategoryClick","numLocations","str","title","text","dangerMode","buttons","willRemove","removeCategory","is_category_dialog_open","categoryIcon","date","CategoryForm","updateCategoryInput","trim","userInput_category","input_category","addCategory","editCategory","autoFocus","id","Categories","resetCategoryInput","categoriesIcon","components_Category_Category","components_CategoryForm_CategoryForm","App","activateScreen","nextScreen","activeScreen","updateActiveScreen","resetAction","components_Categories_Categories","components_Locations_Locations","screen-ref","react_toastify","hideProgressBar","screen","operatorReducer","dataReducer","Date","toLocaleString","toConsumableArray","newLocation","defineProperty","updatedLocations","locationsLength","map_position","map_address","rootReducer","combineReducers","persistedState","localStorage","getItem","JSON","parse","Delaware Beach House","Lincoln City Beach House","Long Island Beach House","Miami Beach House","Outer Banks Beach House","store","createStore","subscribe","setItem","stringify","getState","Root","es","history","hashHistory","path","component","ReactDOM","render","react_redux_es","src_Root","getElementById"],"mappings":"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","file":"static/js/main.5fb7b992.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.cefc206c.svg\";","module.exports = __webpack_public_path__ + \"static/media/category.92509915.svg\";","export function activateScreen(screen) {\r\n    return { type: 'ACTIVATE_SCREEN', payload: screen };\r\n}\r\n\r\nexport function setAction(action) {\r\n    return { type: 'SET_ACTION', payload: action };\r\n}\r\n\r\nexport function resetAction() {\r\n    return { type: 'RESET_ACTION' }\r\n}","export function addCategory(name) {\r\n    return { type: 'ADD_CATEGORY', payload: name };\r\n}\r\n\r\nexport function addLocation(name) {\r\n    return { type: 'ADD_LOCATION', payload: name };\r\n}\r\n\r\nexport function editCategory(input) {\r\n    return { type: 'EDIT_CATEGORY', payload: input };\r\n}\r\n\r\nexport function editLocation(input) {\r\n    return { type: 'EDIT_LOCATION', payload: input };\r\n}\r\n\r\nexport function removeCategory(name) {\r\n    return { type: 'REMOVE_CATEGORY', payload: name };\r\n}\r\n\r\nexport function removeLocation(name) {\r\n    return { type: 'REMOVE_LOCATION', payload: name };\r\n}\r\n\r\nexport function resetCategoryInput() {\r\n    return { type: 'RESET_CATEGORY_INPUT' };\r\n}\r\n\r\nexport function resetLocationInput() {\r\n    return { type: 'RESET_LOCATION_INPUT' };\r\n}\r\n\r\nexport function setSelectedCategory(name) {\r\n    return { type: 'SET_SELECTED_CATEGORY', payload: name };\r\n}\r\n\r\nexport function setSelectedLocation(name) {\r\n    return { type: 'SET_SELECTED_LOCATION', payload: name };\r\n}\r\n\r\nexport function setUngroupedCategory(name) {\r\n    return { type: 'SET_UNGROUPED_CATEGPRY', payload: name };\r\n}\r\n\r\nexport function setViewMode(mode) {\r\n    return { type: 'SET_VIEW_MODE', payload: mode };\r\n}\r\n\r\nexport function updateCategoryInput(input) {\r\n    return { type: 'UPDATE_CATEGORY_INPUT', payload: input };\r\n}\r\n\r\nexport function updateLocationInput(input) {\r\n    return { type: 'UPDATE_LOCATION_INPUT', payload: input };\r\n}\r\n\r\nexport function updateMapPosition(position) {\r\n    return { type: 'UPDATE_MAP_POSITION', payload: position };\r\n}\r\n\r\nexport function updateMapAddress(address) {\r\n    return { type: 'UPDATE_MAP_ADDRESS', payload: address };\r\n}\r\n\r\nexport function setLocationDialogState(state) {\r\n    return { type: 'SET_LOCATION_DIALOG_STATE', payload: state };\r\n}\r\n\r\nexport function setCategoryDialogState(state) {\r\n    return { type: 'SET_CATEGORY_DIALOG_STATE', payload: state };\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Vibration } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport * as actions_operator from '../../../../redux/actions/Operator-actions';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\n\r\nclass Location extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLocationClick = this.handleLocationClick.bind(this);\r\n    }\r\n\r\n    // This function handles location click according to the current action\r\n    handleLocationClick() {\r\n        this.props.setSelectedLocation(this.props.name);\r\n\r\n        if (this.props.action !== '') { // action ADD/EDIT/REMOVE\r\n            this.props.setSelectedCategory(this.props.category);\r\n\r\n            if (this.props.action === 'REMOVE') {\r\n                this.props.removeLocation(this.props.name);\r\n            }\r\n        } else { // No action - vibrate!\r\n            Vibration.vibrate(500);\r\n            this.props.setAction('VIEW');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h6 className={`category-item-location ${this.props.color} \r\n            ${!this.props.is_location_dialog_open ?\r\n                    (this.props.action === 'EDIT' ?\r\n                        'shaking edit' : (this.props.action === 'REMOVE' ? 'shaking remove' : '')) : ''}`}\r\n                onClick={this.handleLocationClick}>{this.props.name}</h6>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        is_location_dialog_open: state.data.is_location_dialog_open\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAction: (action) => dispatch(actions_operator.setAction(action)),\r\n        removeLocation: (name) => dispatch(actions_data.removeLocation(name)),\r\n        setSelectedLocation: (name) => dispatch(actions_data.setSelectedLocation(name)),\r\n        setSelectedCategory: (name) => dispatch(actions_data.setSelectedCategory(name))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);\r\n","import React, { Component } from 'react';\r\nimport LocationPicker from 'react-location-picker';\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../../../redux/actions/Data-actions';\r\n\r\nclass MapContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    // This function handles manual marker position change\r\n    // It updates the state and the coordinates input\r\n    handleChange(location) {\r\n        let newInput = { ...this.props.input_location };\r\n        newInput.address = location.address;\r\n        newInput.lat = location.position.lat;\r\n        newInput.lng = location.position.lng;\r\n\r\n        this.props.updateLocationInput(newInput);\r\n        this.props.updateCoords();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <LocationPicker\r\n                containerElement={<div style={{ height: '100%' }} />}\r\n                mapElement={<div style={{ maxWidth: '450px', height: '173px' }} />}\r\n                defaultPosition={{\r\n                    lat: this.props.input_location.lat == null ?\r\n                        25.761681 : this.props.input_location.lat,\r\n                    lng: this.props.input_location.lng == null ?\r\n                        -80.191788 : this.props.input_location.lng\r\n                }}\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        input_location: state.data.input_location\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateLocationInput: (input) => dispatch(actions_data.updateLocationInput(input))\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapContainer);\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport swal from 'sweetalert'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\r\nimport { geocodeByPlaceId } from 'react-google-places-autocomplete';\r\nimport MapContainer from '../LocationViewer/components/MapContainer/MapContainer';\r\nimport '../../../../App.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\nclass LocationForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.inputRefs = {\r\n            category: React.createRef(),\r\n            name: React.createRef(),\r\n            address: React.createRef(),\r\n            lat: React.createRef(),\r\n            lng: React.createRef()\r\n        };\r\n        this.formContainerRef = React.createRef();\r\n        this.formAddressContainerRef = React.createRef();\r\n        this.formSubmitRef = React.createRef();\r\n\r\n        this.fillControlledElements = this.fillControlledElements.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.setCoords = this.setCoords.bind(this);\r\n        this.updateCoords = this.updateCoords.bind(this);\r\n        this.getLocationInputs = this.getLocationInputs.bind(this);\r\n        this.getGeoCodeFromPlaceId = this.getGeoCodeFromPlaceId.bind(this);\r\n        this.formFilled = false;\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // If the used clicked 'EDIT', fill the form with the existing data\r\n        if (this.props.action === 'EDIT') {\r\n            this.fillControlledElements();\r\n            this.formSubmitRef.current.classList.remove('inactive');\r\n        }\r\n\r\n        this.props.setLocationDialogState(true);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // On update, set 'this.formFilled'\r\n        // This is used to bypass default functionality of <form/> element,\r\n        // with the aim of activating/deactivating the form submit button (style wise)\r\n\r\n        let userInputs = this.getLocationInputs();\r\n        this.formFilled = Object.keys(userInputs)\r\n            .filter((key) => { return !userInputs[key] || userInputs[key].length === 0 }).length === 0;\r\n\r\n        if (this.formFilled) {\r\n            this.formSubmitRef.current.classList.remove('inactive');\r\n        } else {\r\n            this.formSubmitRef.current.classList.add('inactive');\r\n        }\r\n    }\r\n\r\n    // This function fills the form with the existing location data\r\n    fillControlledElements() {\r\n        let locationCategory = this.props.categories_data\r\n            .find(val => val.name === this.props.selected_category);\r\n        let location = locationCategory.locations[this.props.selected_location];\r\n\r\n\r\n        this.inputRefs.name.current.value = this.props.selected_location;\r\n        Object.keys(this.inputRefs).forEach((key) => {\r\n            if (key !== 'name' && key !== 'category') {\r\n                this.inputRefs[key].current.value = location[key];\r\n            }\r\n        });\r\n\r\n        let userInputs = {\r\n            category: this.props.selected_category,\r\n            name: this.props.selected_location,\r\n            address: location.address,\r\n            lat: location.lat,\r\n            lng: location.lng\r\n        }\r\n\r\n        this.props.updateLocationInput(userInputs);\r\n        this.formFilled = true;\r\n    }\r\n\r\n    // This function sets the map coordinates to the input coordinates\r\n    setCoords() {\r\n        let userInput = this.getLocationInputs();\r\n        let lat = this.inputRefs.lat.current.value;\r\n        let lng = this.inputRefs.lng.current.value;\r\n\r\n        let re = new RegExp(/^[-|+]?[0-9]*\\.?[0-9]+$/g);\r\n        let latValid = lat.match(re), lngValid = lng.match(re);\r\n        let inputValid = latValid && lngValid;\r\n\r\n        if (!inputValid) {\r\n            toast.error('Coordinates must be valid numbers');\r\n            setTimeout(() => {\r\n                toast.info('Press \\'SET\\' to revalidate');\r\n            }, 500);\r\n\r\n            if (!latValid) {\r\n                this.inputRefs.lat.current.classList.add('input-error');\r\n                this.inputRefs.lat.current.focus();\r\n            }\r\n            if (!lngValid) {\r\n                this.inputRefs.lng.current.classList.add('input-error');\r\n                if (latValid) {\r\n                    this.inputRefs.lng.current.focus();\r\n                }\r\n            }\r\n        } else if (lat !== userInput.lat || lng !== userInput.lng) {\r\n            userInput.lat = lat;\r\n            userInput.lng = lng;\r\n\r\n            this.props.updateLocationInput(userInput);\r\n        }\r\n    }\r\n\r\n    // This function updates the coordinates inputs\r\n    // Triggered by subcomponent MapContainer \r\n    // (Each time the user moves the marker manually, this function is called)\r\n    updateCoords() {\r\n        this.inputRefs.lat.current.value = this.props.input_location.lat;\r\n        this.inputRefs.lng.current.value = this.props.input_location.lng;\r\n    }\r\n\r\n    // This function gets the location inputs from state\r\n    getLocationInputs() {\r\n        return {\r\n            category: this.props.input_location.category,\r\n            name: this.props.input_location.name,\r\n            address: this.props.input_location.address,\r\n            lat: this.props.input_location.lat,\r\n            lng: this.props.input_location.lng\r\n        }\r\n    }\r\n\r\n    // This nested function searches the coordinates of an address \r\n    // suggested from GoogleAutocomplete (address input) and when found,\r\n    // sets it to the coordinates input\r\n    getGeoCodeFromPlaceId(place_id) {\r\n        geocodeByPlaceId(place_id)\r\n            .then(results => {\r\n                let location = results[0].geometry.location;\r\n                let lat = location.lat();\r\n                let lng = location.lng();\r\n\r\n                this.inputRefs.lat.current.value = lat;\r\n                this.inputRefs.lng.current.value = lng;\r\n                this.inputRefs.lat.current.classList.remove('input-error');\r\n                this.inputRefs.lng.current.classList.remove('input-error');\r\n\r\n                let newInput = {\r\n                    category: this.props.input_location.category,\r\n                    name: this.props.input_location.name,\r\n                    address: this.props.input_location.address,\r\n                    lat: lat,\r\n                    lng: lng\r\n                }\r\n                this.props.updateLocationInput(newInput);\r\n            })\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    // This function updates state with changed input\r\n    handleChange(e) {\r\n        e.target.classList.remove('input-error');\r\n\r\n        let userInputs = this.getLocationInputs();\r\n        userInputs[e.target.name] = e.target.value;\r\n\r\n        this.props.updateLocationInput(userInputs);\r\n    }\r\n\r\n    // This function updates the coordinates according to an address suggestion\r\n    handleSelect(suggestion) {\r\n        this.formAddressContainerRef.current.classList.remove('input-error');\r\n        this.getGeoCodeFromPlaceId(suggestion.place_id);\r\n    }\r\n\r\n    // This function handles form submit\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let userInputs = this.getLocationInputs();\r\n\r\n        // Form fully filled\r\n        if (this.formFilled) {\r\n\r\n            // Check if location name already exists in category\r\n            let locationNameAlreadyExistsInCategory = false;\r\n            Object.keys(this.props.categories_data.find(val => val.name === userInputs.category).locations).forEach((key) => {\r\n                if (key === userInputs.name && key !== this.props.selected_location) {\r\n                    locationNameAlreadyExistsInCategory = true;\r\n                }\r\n            })\r\n\r\n            // Add 'input-error' class and focus if needed\r\n            if (locationNameAlreadyExistsInCategory) {\r\n                this.inputRefs.name.current.classList.add('input-error');\r\n                swal('Location with this name already exists in this category!').then(() => {\r\n                    this.inputRefs.name.current.focus();\r\n                });\r\n            } else {\r\n                // Replace the original values of the coordinates if needed\r\n                let timeoutAnimation = false;\r\n                if (this.inputRefs.lat.current.value !== userInputs.lat) {\r\n                    this.inputRefs.lat.current.value = userInputs.lat;\r\n                    timeoutAnimation = true;\r\n                }\r\n                if (this.inputRefs.lng.current.value !== userInputs.lng) {\r\n                    this.inputRefs.lng.current.value = userInputs.lng;\r\n                    if (!timeoutAnimation) {\r\n                        timeoutAnimation = true;\r\n                    }\r\n                }\r\n\r\n                // Submit action\r\n                switch (this.props.action) {\r\n                    case 'ADD':\r\n                        this.props.addLocation(userInputs);\r\n                        break;\r\n                    case 'EDIT':\r\n                        this.props.editLocation(userInputs);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                // Close form\r\n                if (timeoutAnimation) {\r\n                    setTimeout(() => {\r\n                        this.props.closeForm(this.formContainerRef);\r\n                    }, 50);\r\n                } else {\r\n                    this.props.closeForm(this.formContainerRef);\r\n                }\r\n\r\n            }\r\n        } else { // Form not fully filled\r\n\r\n            // Add 'input-error' class to unfilled inputs\r\n            let firstEmptyInputRef, currentInputRef;\r\n            let addressEmpty = false;\r\n\r\n            Object.keys(userInputs).forEach((key, i) => {\r\n                if (!userInputs[key]) {\r\n\r\n                    if (key === 'address') {\r\n                        currentInputRef = this.formAddressContainerRef;\r\n                        addressEmpty = true;\r\n                    } else {\r\n                        currentInputRef = this.inputRefs[key];\r\n                    }\r\n\r\n                    currentInputRef.current.classList.add('input-error');\r\n\r\n                    if (!firstEmptyInputRef) {\r\n                        firstEmptyInputRef = currentInputRef;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Toast information to user\r\n            toast.error('Fill all fields first!');\r\n\r\n            if (addressEmpty) {\r\n                setTimeout(() => {\r\n                    toast.info('Note that Address is autocomplete only');\r\n                }, 500);\r\n            }\r\n\r\n            // Focus first unfilled input\r\n            firstEmptyInputRef.current.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"component-form-container\" onMouseDown={this.props.closeForm} ref={this.formContainerRef}>\r\n                <div className=\"component-form w-form\">\r\n                    <form className=\"component-form-inner\" onSubmit={this.handleSubmit}>\r\n                        {this.props.action === 'ADD' && <label htmlFor=\"category\" className=\"form-field-label\">Location Category</label>}\r\n                        {this.props.action === 'ADD' &&\r\n                            <select data-name=\"category\" name=\"category\" required=\"\"\r\n                                className=\"select-field w-select\" onChange={this.handleChange} ref={this.inputRefs.category}>\r\n                                <option value=\"\">Select category...</option>\r\n                                {this.props.categories_data.map((category, i) => {\r\n                                    return <option value={category.name} key={i}>{category.name}</option>\r\n                                })}\r\n                            </select>}\r\n                        <label htmlFor=\"name\" className=\"form-field-label\">Location Name</label>\r\n                        <input className=\"text-field-form w-input\" maxLength=\"256\" name=\"name\" data-name=\"name\"\r\n                            placeholder=\"My Beach House\" type=\"text\" required=\"\" autoComplete=\"off\" onChange={this.handleChange} ref={this.inputRefs.name} />\r\n                        <label htmlFor=\"address\" className=\"form-field-label\">Location Address</label>\r\n                        <div className=\"google-places-autocomplete-container\" ref={this.formAddressContainerRef}>\r\n                            <GooglePlacesAutocomplete maxLength=\"256\" name=\"address\" data-name=\"address\"\r\n                                placeholder=\"18555 Collins Ave, Sunny Isles Beach, FL\" type=\"text\" required=\"\" autoComplete=\"off\"\r\n                                initialValue={this.props.input_location.address} onSelect={this.handleSelect}\r\n                                onChange={this.handleChange} ref={this.inputRefs.address} /></div>\r\n                        <div className=\"component-form-coords\">\r\n                            <div className=\"component-form-coords-manual\">\r\n                                <label htmlFor=\"lat\" className=\"form-field-label\">lat</label>\r\n                                <input className=\"component-form-coords-textfield w-input\" maxLength=\"256\" name=\"lat\"\r\n                                    data-name=\"lat\" placeholder=\"25.761681\" type=\"text\" required=\"\" autoComplete=\"off\" ref={this.inputRefs.lat} />\r\n                                <label htmlFor=\"lng\" className=\"form-field-label\">lng</label>\r\n                                <input className=\"component-form-coords-textfield w-input\" maxLength=\"256\" name=\"lng\"\r\n                                    data-name=\"lng\" placeholder=\"-80.191788\" type=\"text\" required=\"\" autoComplete=\"off\" ref={this.inputRefs.lng} />\r\n                                <div className=\"component-form-coords-button\" data-tip=\"Set the marker position by coordinates\" onClick={this.setCoords}>SET</div>\r\n                            </div>\r\n                            <div className=\"component-form-coords-map\"><MapContainer updateCoords={this.updateCoords} /></div>\r\n                        </div>\r\n                        <input type=\"submit\" data-wait=\"Please wait...\"\r\n                            className=\"component-form-submit w-button inactive\" value=\"APPLY\" ref={this.formSubmitRef} />\r\n                    </form>\r\n                </div>\r\n                <ReactTooltip />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        selected_location: state.data.selected_location,\r\n        selected_category: state.data.selected_category,\r\n        input_location: state.data.input_location\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addLocation: (name) => dispatch(actions_data.addLocation(name)),\r\n        editLocation: (input) => dispatch(actions_data.editLocation(input)),\r\n        updateLocationInput: (input) => dispatch(actions_data.updateLocationInput(input)),\r\n        setLocationDialogState: (state) => dispatch(actions_data.setLocationDialogState(state))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationForm);","import React, { Component } from 'react';\r\nimport '../../LocationViewer.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../../../redux/actions/Data-actions';\r\n\r\nclass ViewerDialog extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view-location-dialog\">\r\n                <h5 className=\"heading-4\">{this.props.selected_location}</h5>\r\n                <div className=\"view-location-dialog-buttons\">\r\n                    <button className=\"button w-button\" onClick={() => { this.props.setViewMode('properties'); }}>View Properties</button>\r\n                    <button className=\"button w-button\" onClick={() => { this.props.setViewMode('map'); }}>View Map</button>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        selected_location: state.data.selected_location\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setViewMode: (mode) => dispatch(actions_data.setViewMode(mode)),\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewerDialog);","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport copyIcon from '../../../../images/copy.svg';\r\n\r\nclass PropertiesViewer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.copyField = this.copyField.bind(this);\r\n        this.fieldsRefs = {\r\n            address: React.createRef(),\r\n            coordinates: React.createRef(),\r\n            category: React.createRef()\r\n        }\r\n    }\r\n\r\n    // This function copies a property field to clipboard\r\n    copyField(e) {\r\n        let fieldToCopy = e.target.getAttribute('copy');\r\n        let fieldText = this.fieldsRefs[fieldToCopy].current.innerText.replace(/\\n/g, '');\r\n        let input = document.createElement('input');\r\n\r\n        input.style.opacity = '0';\r\n        input.style['pointer-events'] = 'none';\r\n        document.body.appendChild(input);\r\n        input.value = fieldText;\r\n        input.focus();\r\n        input.select();\r\n        document.execCommand('copy');\r\n        input.remove();\r\n\r\n        toast.info(`${fieldToCopy.charAt(0).toUpperCase()}${fieldToCopy.slice(1)} copied to clipboard!`, { autoClose: 1500 });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view-location-properties\">\r\n                <h1 className=\"heading-location-viewer\">{this.props.data.name}</h1>\r\n                <div className=\"seperator-4\">\r\n                </div>\r\n                <h1 className=\"label\">Address</h1>\r\n                <div className=\"property-value-container\">\r\n                    <img src={copyIcon} onClick={this.copyField} copy=\"address\" width=\"25\" data-tip=\"Copy\" alt=\"\" className=\"image-copy-property\" />\r\n                    <h1 className=\"heading-location-property\" ref={this.fieldsRefs.address}>{this.props.data.address}</h1>\r\n                </div>\r\n                <h1 className=\"label\">Coordinates</h1>\r\n                <div className=\"property-value-container\">\r\n                    <img src={copyIcon} onClick={this.copyField} copy=\"coordinates\" data-tip=\"Copy\" width=\"25\" alt=\"\" className=\"image-copy-property\" />\r\n                    <h1 className=\"heading-location-property\" ref={this.fieldsRefs.coordinates}>\r\n                        <strong>lat</strong>:&nbsp;{this.props.data.position.lat}\r\n                        &#44;&nbsp;<strong>lng</strong>:{this.props.data.position.lng}</h1>\r\n                </div>\r\n                <h1 className=\"label\">Category</h1>\r\n                <div className=\"property-value-container\">\r\n                    <img src={copyIcon} onClick={this.copyField} copy=\"category\" data-tip=\"Copy\" width=\"25\" alt=\"\" className=\"image-copy-property\" />\r\n\r\n                    <h1 className=\"heading-location-property\" ref={this.fieldsRefs.category}>{this.props.data.category}</h1>\r\n                </div><button className=\"view-location-properties-button w-button\" onClick={this.props.closeForm}>Close</button>\r\n                <ReactTooltip />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PropertiesViewer;","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nclass MapViewer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.mapContainerRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mapContainerRef.current.firstChild.style = \"maxWidth: '435px;'\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view-location-map\">\r\n                <h1 className=\"heading-location-viewer\">{this.props.data.name}</h1>\r\n                <div className=\"seperator-4\">\r\n                </div>\r\n                <div className=\"view-location-map-map-container\" ref={this.mapContainerRef}>\r\n                    <Map\r\n                        google={this.props.google}\r\n                        zoom={18}\r\n                        style={{ height: '450px', position: 'relative' }}\r\n                        initialCenter={this.props.data.position}>\r\n                        <Marker position={this.props.data.position} />\r\n                    </Map>\r\n                </div>\r\n                <button className=\"view-location-map-button w-button\" onClick={this.props.closeForm}>Close</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({ apiKey: 'AIzaSyB_FOwuZf9hp8EzcKh1Dky70NBETQBO_a8' })(MapViewer);","import React, { Component } from 'react';\r\nimport ViewerDialog from './components/ViewerDialog/ViewerDialog'\r\nimport PropertiesViewer from './components/PropertiesViewer/PropertiesViewer'\r\nimport MapViewer from './components/MapViewer/MapViewer';\r\nimport './LocationViewer.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\nclass LocationViewer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getViewData = this.getViewData.bind(this);\r\n        this.data = this.getViewData();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setViewMode('dialog');\r\n    }\r\n\r\n    // This function gets the location data\r\n    // It is used to pass the data to subcomponents later on\r\n    getViewData() {\r\n        let location = this.props.categories_data\r\n        .find(val => val.name === this.props.ungrouped_category)\r\n        .locations[this.props.selected_location];\r\n\r\n        return {\r\n            category: this.props.ungrouped_category,\r\n            name: this.props.selected_location,\r\n            address: location.address,\r\n            position: {lat: location.lat, lng: location.lng}\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view-location-container\" onMouseDown={this.props.closeForm}>\r\n                {this.props.view_mode === 'dialog' && <ViewerDialog />}\r\n                {this.props.view_mode === 'properties' && <PropertiesViewer  closeForm={this.props.closeForm} data={this.data}/>}\r\n                {this.props.view_mode === 'map' && <MapViewer closeForm={this.props.closeForm} data={this.data}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories_data: state.data.categories,\r\n        selected_location: state.data.selected_location,\r\n        ungrouped_category: state.data.ungrouped_category,\r\n        view_mode: state.data.view_mode\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setViewMode: (mode) => dispatch(actions_data.setViewMode(mode))\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationViewer);","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport swal from 'sweetalert';\r\nimport Location from './components/Location/Location';\r\nimport LocationForm from './components/LocationForm/LocationForm';\r\nimport LocationViewer from './components/LocationViewer/LocationViewer';\r\nimport locationsIcon from '../../images/locations.svg';\r\nimport addIcon from '../../images/add.svg';\r\nimport editIcon from '../../images/edit.svg';\r\nimport removeIcon from '../../images/remove.svg';\r\nimport arrowIcon from './images/arrow.svg';\r\nimport './Locations.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_operator from '../../redux/actions/Operator-actions';\r\nimport * as actions_data from '../../redux/actions/Data-actions';\r\n\r\nclass Locations extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addLocation = this.addLocation.bind(this);\r\n        this.editLocation = this.editLocation.bind(this);\r\n        this.removeLocation = this.removeLocation.bind(this);\r\n        this.disableCurrentAction = this.disableCurrentAction.bind(this);\r\n        this.ungroupCategory = this.ungroupCategory.bind(this);\r\n        this.toggleCategory = this.toggleCategory.bind(this);\r\n\r\n        this.colors = ['blue', 'orange', 'red', 'purple', 'green'];\r\n    }\r\n\r\n    // This function sets/cancels 'ADD' action to state (for Add mode)\r\n    // Triggered by 'ADD' toolbar button\r\n    addLocation() {\r\n        if (this.props.categories_data.length > 0) {\r\n            this.disableCurrentAction(null, true);\r\n            this.props.setAction('ADD');\r\n        } else { // No categories yet\r\n            swal('Before adding a location, please add at least 1 category through the Categories screen');\r\n        }\r\n\r\n    }\r\n\r\n    // This function sets/cancels 'EDIT' action to state (for Edit mode)\r\n    // Triggered by 'EDIT' toolbar button\r\n    editLocation() {\r\n        if (this.props.locations_count > 0) {\r\n            if (this.props.action === 'EDIT') { // Cancel action\r\n                this.props.setAction('');\r\n            } else { // Set new action\r\n                this.disableCurrentAction(null, true);\r\n                this.props.setAction('EDIT');\r\n            }\r\n        } else { // No locations to edit yet\r\n            toast.warn('No locations to edit. Try adding one');\r\n        }\r\n    }\r\n\r\n    // This function sets/cancels 'REMOVE' action to state (for Remove mode)\r\n    // Triggered by 'REMOVE' toolbar button\r\n    removeLocation() {\r\n        if (this.props.locations_count > 0) {\r\n            if (this.props.action === 'REMOVE') { // Cancel action\r\n                this.props.setAction('');\r\n            } else { // Set new action\r\n                this.disableCurrentAction(null, true);\r\n                this.props.setAction('REMOVE');\r\n            }\r\n        } else { // No locations to remove yet\r\n            toast.warn('No locations to remove. Try adding one');\r\n        }\r\n    }\r\n\r\n    // This function disables any action (ADD/EDIT/REMOVE)\r\n    disableCurrentAction(e, controlled = false) {\r\n        if (controlled || e.target === e.currentTarget) {\r\n            this.props.setAction('');\r\n            this.props.setViewMode('');\r\n            this.props.setLocationDialogState(false);\r\n            this.props.setSelectedLocation('');\r\n            this.props.setSelectedCategory('');\r\n            this.props.resetLocationInput();\r\n        }\r\n    }\r\n\r\n    // This function ungroups a category\r\n    ungroupCategory(e) {\r\n        let clicked_category = e.currentTarget.getAttribute('category');\r\n        let locations_size = Number(e.currentTarget.getAttribute('locations_size'));\r\n\r\n        // Only ungroup categories with locations\r\n        if (e.currentTarget.classList.contains('grouped') && locations_size > 0) {\r\n            this.props.setUngroupedCategory(clicked_category);\r\n        }\r\n    }\r\n\r\n    // This function toggles a category\r\n    toggleCategory(e) {\r\n        let clicked_category = e.target.getAttribute('category');\r\n        let locations_size = Number(e.target.getAttribute('locations_size'));\r\n\r\n        if (this.props.ungrouped_category === clicked_category) { // Same category\r\n            this.props.setUngroupedCategory('');\r\n        } else if (e.target.classList.contains('grouped') && locations_size > 0) { // Different category\r\n            this.props.setUngroupedCategory(clicked_category);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"locations\">\r\n                <div className=\"component-header\">\r\n                    <div className=\"component-header-icon-wrapper\">\r\n                        <img src={locationsIcon} width=\"25\" alt=\"\" /></div>\r\n                    <h1 className=\"heading-component h1\">\r\n                        Locations</h1>\r\n                    <div className=\"component-header-right-margin\"></div>\r\n                </div>\r\n                <div className=\"seperator-2\"></div>\r\n                <div className=\"component-toolbar\">\r\n                    <div className={`custom-button ${this.props.action === 'ADD' ? 'active' : 'inactive'}`} onClick={this.addLocation}>\r\n                        <img src={addIcon} width=\"20\" alt=\"\" />\r\n                        <h3 className=\"custom-heading\">Add</h3>\r\n                    </div>\r\n                    <div className={`custom-button ${this.props.action === 'EDIT' ? 'active' : 'inactive'}`} onClick={this.editLocation}>\r\n                        <img src={editIcon} width=\"20\" alt=\"\" />\r\n                        <h3 className=\"custom-heading\">Edit</h3>\r\n                    </div>\r\n                    <div className={`custom-button ${this.props.action === 'REMOVE' ? 'active' : 'inactive'}`} onClick={this.removeLocation}>\r\n                        <img src={removeIcon} width=\"20\" alt=\"\" />\r\n                        <h3 className=\"custom-heading\">Remove</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"seperator-3\"></div>\r\n                <div className=\"locations-list-container\">\r\n                    {\r\n                        this.props.categories_data.length > 0 ?\r\n                            this.props.categories_data.map((category, i) => {\r\n                                return <div className={`category ${this.props.ungrouped_category === category.name ? 'ungrouped' : 'grouped'}`}\r\n                                    key={i} category={category.name} locations_size={Object.keys(category.locations).length} onClick={this.ungroupCategory}>\r\n\r\n                                    <div className={`category-header ${this.props.ungrouped_category === category.name ? 'ungrouped' : 'grouped'}`}\r\n                                        category={category.name} locations_size={Object.keys(category.locations).length} onClick={this.toggleCategory} >\r\n\r\n                                        <img src={arrowIcon} category={category.name} width=\"20\" alt=\"\" className={`image-arrow-${this.props.ungrouped_category === category.name ? 'ungrouped' : 'grouped'}`} />\r\n                                        <h1 category={category.name} className=\"h1 body heading-location-list-item\" >Categoy: {category.name}</h1>\r\n                                    </div>\r\n\r\n                                    {this.props.ungrouped_category === category.name ? <div className=\"category-body\">\r\n                                        {\r\n                                            Object.keys(category.locations).sort().map((location_name, j) => {\r\n                                                return <Location name={location_name} category={category.name} key={j}\r\n                                                    color={this.colors[j % this.colors.length]} />;\r\n                                            })\r\n                                        }\r\n                                    </div> :\r\n                                        <h6 className=\"category-item-sub-heading-2\">{Object.keys(category.locations).length} locations in this category</h6>}\r\n                                </div>\r\n                            }) :\r\n                            <div className=\"text-block\">No categories yet. Go back to the Categories and add one!</div>\r\n\r\n                    }\r\n                    {this.props.action === 'VIEW' && <LocationViewer closeForm={this.disableCurrentAction} />}\r\n                </div>\r\n                {(this.props.action === 'ADD' || (this.props.action === 'EDIT' && this.props.selected_location)) && <LocationForm closeForm={this.disableCurrentAction} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        selected_location: state.data.selected_location,\r\n        ungrouped_category: state.data.ungrouped_category,\r\n        locations_count: state.data.locations_count\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAction: (action) => dispatch(actions_operator.setAction(action)),\r\n        setUngroupedCategory: (category) => dispatch(actions_data.setUngroupedCategory(category)),\r\n        setSelectedLocation: (name) => dispatch(actions_data.setSelectedLocation(name)),\r\n        setSelectedCategory: (name) => dispatch(actions_data.setSelectedCategory(name)),\r\n        setLocationDialogState: (state) => dispatch(actions_data.setLocationDialogState(state)),\r\n        setViewMode: (mode) => dispatch(actions_data.setViewMode(mode)),\r\n        resetLocationInput: () => dispatch(actions_data.resetLocationInput())\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations);","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport categoryIcon from '../../images/category.svg'\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\n\r\nclass Category extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleCategoryClick = this.handleCategoryClick.bind(this);\r\n    }\r\n\r\n    // This function handles location click according to the current action\r\n    handleCategoryClick() {\r\n        if (this.props.action !== '') { // action ADD/EDIT/REMOVE\r\n            this.props.setSelectedCategory(this.props.name);\r\n\r\n            // If action is REMOVE and the category contains locations, \r\n            // ask the user for remove confirmation\r\n            if (this.props.action === 'REMOVE') {\r\n\r\n                let numLocations = Object.keys(this.props.categories_data.find(category => {\r\n                    return (category.name === this.props.name);\r\n                }).locations).length;\r\n\r\n                let str = numLocations > 1 ? 'locatios' : 'location';\r\n                if (numLocations > 0) {\r\n                    swal({\r\n                        title: 'Are you sure?',\r\n                        text: `This category contains ${numLocations} ${str}. \r\n                        Removing it wiil also remove the ${str}. Proceed?`,\r\n                        dangerMode: true,\r\n                        buttons: ['Cancel', 'Remove']\r\n                    }).then((willRemove) => {\r\n                        if (willRemove) {\r\n                            this.props.removeCategory(this.props.name);\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.props.removeCategory(this.props.name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`category ${!this.props.is_category_dialog_open ?\r\n                (this.props.action === 'EDIT' ?\r\n                    'shaking edit' : (this.props.action === 'REMOVE' ? 'shaking remove' : '')) : ''}`}\r\n                onClick={this.handleCategoryClick}>\r\n                <div className=\"category-header\"><img src={categoryIcon} width=\"30\" alt=\"\" />\r\n                    <h1 className=\"heading-category-list-item h1 body\">{this.props.name}</h1>\r\n                </div>\r\n                <h6 className=\"category-item-sub-heading\">Created on: {this.props.date}</h6>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        is_category_dialog_open: state.data.is_category_dialog_open\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeCategory: (name) => dispatch(actions_data.removeCategory(name)),\r\n        setSelectedCategory: (name) => dispatch(actions_data.setSelectedCategory(name))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport swal from 'sweetalert'\r\nimport '../../../../App.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\nclass CategoryForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.formContainerRef = React.createRef();\r\n        this.inputRefs = { name: React.createRef() };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        \r\n        this.formFilled = this.props.action === 'EDIT';\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If the used clicked 'EDIT', fill the form with the existing data\r\n        if (this.props.action === 'EDIT') {\r\n            this.inputRefs.name.current.value = this.props.selected_category;\r\n        }\r\n\r\n        this.props.setCategoryDialogState(true);\r\n    }\r\n\r\n    // This function updates state with changed input\r\n    handleChange(e) {\r\n        this.inputRefs.name.current.classList.remove('input-error');\r\n        this.props.updateCategoryInput(e.target.value.trim());\r\n        this.formFilled = e.target.value && e.target.value.trim().length > 0;\r\n    }\r\n\r\n    // This function handles form submit\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let userInput_category = this.props.input_category;\r\n\r\n        // Form fully filled\r\n        if (this.formFilled) {\r\n            let inputChanged = userInput_category !== this.props.selected_category;\r\n\r\n            // Input did not change, close form\r\n            if (!inputChanged) {\r\n                this.props.closeForm(this.formContainerRef);\r\n            } else { // Input changed\r\n\r\n                // Check if location name already exists in category\r\n                if (this.props.categories_data.find(val => val.name === userInput_category)) {\r\n                    this.inputRefs.name.current.classList.add('input-error');\r\n                    swal('Category with this name already exists!').then(() =>{\r\n                        this.inputRefs.name.current.focus();\r\n                    });\r\n                } else {\r\n\r\n                    // Submit action\r\n                    switch (this.props.action) {\r\n                        case 'ADD':\r\n                            this.props.addCategory(userInput_category);\r\n                            break;\r\n                        case 'EDIT':\r\n                            this.props.editCategory(userInput_category);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    // Close form\r\n                    this.props.closeForm(this.formContainerRef);\r\n                }\r\n            }\r\n\r\n        } else { // Form not fully filled\r\n\r\n            // Add 'input-error' class to the unfilled input, toast information & focus\r\n            this.inputRefs.name.current.classList.add('input-error');\r\n            toast.error('Empty input!', {autoClose: 1500});\r\n            this.inputRefs.name.current.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"component-form-container\" onMouseDown={this.props.closeForm} ref={this.formContainerRef}>\r\n                <div className=\"component-form w-form\">\r\n                    <form className=\"component-form-inner\" onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"name\" className=\"form-field-label\">Category Name</label>\r\n                        <input className=\"text-field-form w-input\" autoFocus={true} maxLength=\"256\"\r\n                            name=\"name\" data-name=\"Name\" placeholder=\"&quot;My Beach Houses&quot;\" type=\"text\"\r\n                            id=\"name\" required=\"\" autoComplete=\"off\" onChange={this.handleChange} ref={this.inputRefs.name} />\r\n                        <input type=\"submit\" data-wait=\"Please wait...\"\r\n                            className={`component-form-submit w-button ${this.formFilled ? 'active' : 'inactive'}`} value=\"OK\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        input_category: state.data.input_category,\r\n        selected_category: state.data.selected_category\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addCategory: (name) => dispatch(actions_data.addCategory(name)),\r\n        editCategory: (input) => dispatch(actions_data.editCategory(input)),\r\n        updateCategoryInput: (input) => dispatch(actions_data.updateCategoryInput(input)),\r\n        setCategoryDialogState: (state) => dispatch(actions_data.setCategoryDialogState(state))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryForm);","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport Category from './components/Category/Category';\r\nimport CategoryForm from './components/CategoryForm/CategoryForm';\r\nimport categoriesIcon from '../../images/categories.svg';\r\nimport addIcon from '../../images/add.svg';\r\nimport editIcon from '../../images/edit.svg';\r\nimport removeIcon from '../../images/remove.svg';\r\nimport './Categories.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_operator from '../../redux/actions/Operator-actions';\r\nimport * as actions_data from '../../redux/actions/Data-actions';\r\n\r\nclass Categories extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addCategory = this.addCategory.bind(this);\r\n        this.editCategory = this.editCategory.bind(this);\r\n        this.removeCategory = this.removeCategory.bind(this);\r\n        this.disableCurrentAction = this.disableCurrentAction.bind(this);\r\n    }\r\n\r\n    // This function sets/cancels 'ADD' action to state (for Add mode)\r\n    // Triggered by 'ADD' toolbar button\r\n    addCategory() {\r\n        this.disableCurrentAction(null, true);\r\n        this.props.setAction('ADD');\r\n    }\r\n\r\n    // This function sets/cancels 'EDIT' action to state (for Edit mode)\r\n    // Triggered by 'EDIT' toolbar button\r\n    editCategory() {\r\n        if (this.props.categories_data.length > 0) {\r\n            if (this.props.action === 'EDIT') { // Cancel action\r\n                this.props.setAction('');\r\n            } else { // Set new action\r\n                this.disableCurrentAction(null, true);\r\n                this.props.setAction('EDIT');\r\n            }\r\n        } else { // No locations to edit yet\r\n            toast.warn('No categories to edit. Try adding one');\r\n        }\r\n    }\r\n\r\n    // This function sets/cancels 'REMOVE' action to state (for Remove mode)\r\n    // Triggered by 'REMOVE' toolbar button\r\n    removeCategory(e) {\r\n        if (this.props.categories_data.length > 0) {\r\n            if (this.props.action === 'REMOVE') { // Cancel action\r\n                this.props.setAction('');\r\n            } else { // Set new action\r\n                this.disableCurrentAction(null, true);\r\n                this.props.setAction('REMOVE');\r\n            }\r\n        } else { // No locations to remove yet\r\n            toast.warn('No categories to remove. Try adding one');\r\n        }\r\n    }\r\n\r\n    // This function disables any action (ADD/EDIT/REMOVE)\r\n    disableCurrentAction(e, controlled = false) {\r\n        if (controlled || e.target === e.currentTarget) {\r\n            this.props.setAction('');\r\n            this.props.setCategoryDialogState(false);\r\n            this.props.setSelectedCategory('');\r\n            this.props.resetCategoryInput();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"categories\">\r\n                <div className=\"component-header\">\r\n                    <div className=\"component-header-icon-wrapper\">\r\n                        <img src={categoriesIcon} width=\"25\" alt=\"\" /></div>\r\n                    <h1 className=\"heading-component h1\">\r\n                        Categories</h1>\r\n                    <div className=\"component-header-right-margin\"></div>\r\n                </div>\r\n                <div className=\"seperator-2\"></div>\r\n                <div className=\"component-toolbar\">\r\n                    <div className={`custom-button ${this.props.action === 'ADD' ? 'active' : 'inactive'}`} onClick={this.addCategory}>\r\n                        <img src={addIcon} width=\"20\" alt=\"\" />\r\n                        <h3 className=\"custom-heading\">Add</h3>\r\n                    </div>\r\n                    <div className={`custom-button ${this.props.action === 'EDIT' ? 'active' : 'inactive'}`} onClick={this.editCategory}>\r\n                        <img src={editIcon} width=\"20\" alt=\"\" />\r\n                        <h3 className=\"custom-heading\">Edit</h3>\r\n                    </div>\r\n                    <div className={`custom-button ${this.props.action === 'REMOVE' ? 'active' : 'inactive'}`} onClick={this.removeCategory}>\r\n                        <img src={removeIcon} width=\"20\" alt=\"\" />\r\n                        <h3 className=\"custom-heading\">Remove</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"seperator-3\"></div>\r\n                <div className=\"categories-list-container\">\r\n                    {this.props.categories_data.length > 0 ?\r\n                        this.props.categories_data.map((category, i) => {\r\n                            return <Category name={category.name} date={category.date} key={i} />\r\n                        }) :\r\n                        <div className=\"text-block\">No categories yet. Click the 'Add' button above</div>}\r\n                </div>\r\n                {(this.props.action === 'ADD' || (this.props.action === 'EDIT' && this.props.selected_category)) && <CategoryForm closeForm={this.disableCurrentAction} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        selected_category: state.data.selected_category,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAction: (action) => dispatch(actions_operator.setAction(action)),\r\n        setSelectedCategory: (name) => dispatch(actions_data.setSelectedCategory(name)),\r\n        setCategoryDialogState: (state) => dispatch(actions_data.setCategoryDialogState(state)),\r\n        resetCategoryInput: () => dispatch(actions_data.resetCategoryInput())\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","import React, { Component } from 'react';\nimport Locations from './components/Locations/Locations';\nimport Categories from './components/Categories/Categories';\nimport categoriesIcon from './images/categories.svg';\nimport locationsIcon from './images/locations.svg';\nimport './App.css';\n\nimport { ToastContainer } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport * as actions_operator from './redux/actions/Operator-actions';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.activateScreen = this.activateScreen.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = 'myLocations';\n  }\n\n  // This function activates a screen (for example Categories/Locations)\n  // Called from onClick listeners of the pages' icons\n  activateScreen(ref) {\n\n    let target = ref.current || ref.currentTarget;\n    let nextScreen = target.getAttribute('screen-ref');\n\n    // Only activate an inactive screen\n    if (nextScreen !== this.props.activeScreen) {\n      this.props.updateActiveScreen(nextScreen);\n\n      // Reset 'action' if icon clicked during an action (ADD/EDIT/REMOVE)\n      if (this.props.action !== '') {\n        this.props.resetAction();\n      }\n\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app-body\">\n        <div className=\"ml-container\">\n          <div className=\"component-container\">\n            {this.props.activeScreen === 'Categories' && <Categories />}\n            {this.props.activeScreen === 'Locations' && <Locations />}\n          </div>\n          <div className=\"seperator\"></div>\n          <div className=\"bottom-toolbar\">\n            <div className={`bottom-icon-wrapper ${this.props.activeScreen === 'Categories' ?\n              'active' : 'inactive'}`} onClick={this.activateScreen} screen-ref=\"Categories\">\n              <img src={categoriesIcon} width=\"40\" alt=\"\" className=\"icon-bottom\" />\n              <div className=\"icon-bottom-underline\"></div>\n            </div>\n            <div className={`bottom-icon-wrapper ${this.props.activeScreen === 'Locations' ?\n              'active' : 'inactive'}`} onClick={this.activateScreen} screen-ref=\"Locations\">\n              <img src={locationsIcon} width=\"40\" alt=\"\" className=\"icon-bottom\" />\n              <div className=\"icon-bottom-underline\"></div>\n            </div>\n          </div>\n        </div>\n        <ToastContainer hideProgressBar={true} autoClose={4500} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeScreen: state.operator.activeScreen,\n    action: state.operator.action\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateActiveScreen: (screen) => dispatch(actions_operator.activateScreen(screen)),\n    resetAction: () => dispatch(actions_operator.resetAction())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const operatorReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'ACTIVATE_SCREEN':\r\n            state = { ...state, activeScreen: action.payload };\r\n            break;\r\n        case 'SET_ACTION':\r\n            state = { ...state, action: action.payload };\r\n            break;\r\n        case 'RESET_ACTION':\r\n            state = { ...state, action: '' };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default operatorReducer;","const dataReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD_CATEGORY':\r\n            state = {\r\n                ...state,\r\n                data: [{\r\n                    name: action.payload,\r\n                    locations: {},\r\n                    date: new Date().toLocaleString()\r\n                }, ...state.data]\r\n            };\r\n            break;\r\n        case 'ADD_LOCATION':\r\n            state = {\r\n                ...state,\r\n                data: state.data.map((val) => {\r\n                    if (val.name === action.payload.category) {\r\n                        let newLocation = {\r\n                            address: action.payload.address,\r\n                            lat: action.payload.lat,\r\n                            lng: action.payload.lng\r\n                        }\r\n                        return { ...val, locations: { ...val.locations, [action.payload.name]: newLocation } };\r\n                    } else {\r\n                        return { ...val };\r\n                    }\r\n                }),\r\n                locations_count: state.locations_count + 1\r\n            };\r\n            break;\r\n        case 'EDIT_CATEGORY':\r\n            state = {\r\n                ...state,\r\n                data: state.data.map((val) => {\r\n                    return {\r\n                        ...val, name: val.name === state.selected_category ?\r\n                            action.payload : val.name\r\n                    };\r\n                })\r\n            };\r\n            break;\r\n        case 'EDIT_LOCATION':\r\n            state = {\r\n                ...state,\r\n                data: state.data.map((val) => {\r\n                    if (val.name === action.payload.category) {\r\n                        let updatedLocations = { ...val.locations };\r\n                        delete updatedLocations[state.selected_location];\r\n\r\n                        updatedLocations[action.payload.name] = {\r\n                            address: action.payload.address,\r\n                            lat: action.payload.lat,\r\n                            lng: action.payload.lng\r\n                        }\r\n                        val['locations'] = updatedLocations;\r\n                    }\r\n                    return { ...val };\r\n                }),\r\n\r\n            };\r\n            break;\r\n        case 'REMOVE_CATEGORY':\r\n            let numLocations = Object.keys(state.data.find(category => \r\n                { return (category.name === action.payload); }).locations).length;\r\n            state = {\r\n                ...state,\r\n                data: state.data.filter(val => val.name !== action.payload),\r\n                action: state.data.length === 1 ? '' : state.action,\r\n                locations_count: state.locations_count - numLocations\r\n            };\r\n            break;\r\n        case 'REMOVE_LOCATION':\r\n\r\n            let locationsLength = Object.keys(state.data.find(val =>\r\n                val.name === state.selected_category).locations).length;\r\n            state = {\r\n                ...state,\r\n                data: state.data.map((val) => {\r\n                    if (val.name === state.selected_category) {\r\n                        let updatedLocations = { ...val.locations };\r\n                        delete updatedLocations[state.selected_location];\r\n                        val['locations'] = updatedLocations;\r\n                    }\r\n                    return { ...val };\r\n                }),\r\n                action: locationsLength === 1 ? '' : state.action,\r\n                ungrouped_category: locationsLength === 1 ? '' : state.ungrouped_category,\r\n                locations_count: state.locations_count - 1\r\n            };\r\n            break;\r\n        case 'RESET_CATEGORY_INPUT':\r\n            state = { ...state, input_category: '' };\r\n            break;\r\n        case 'RESET_LOCATION_INPUT':\r\n            state = { ...state, input_location: {} };\r\n            break;\r\n        case 'SET_SELECTED_CATEGORY':\r\n            state = { ...state, selected_category: action.payload };\r\n            break;\r\n        case 'SET_SELECTED_LOCATION':\r\n            state = { ...state, selected_location: action.payload };\r\n            break;\r\n        case 'SET_UNGROUPED_CATEGPRY':\r\n            state = { ...state, ungrouped_category: action.payload };\r\n            break;\r\n        case 'SET_LOCATION_DIALOG_STATE':\r\n            state = { ...state, is_location_dialog_open: action.payload };\r\n            break;\r\n        case 'SET_CATEGORY_DIALOG_STATE':\r\n            state = { ...state, is_category_dialog_open: action.payload };\r\n            break;\r\n        case 'SET_VIEW_MODE':\r\n            state = { ...state, view_mode: action.payload };\r\n            break;\r\n        case 'UPDATE_CATEGORY_INPUT':\r\n            state = { ...state, input_category: action.payload };\r\n            break;\r\n        case 'UPDATE_LOCATION_INPUT':\r\n            state = { ...state, input_location: action.payload };\r\n            break;\r\n        case 'UPDATE_MAP_POSITION':\r\n            state = { ...state, map_position: action.payload };\r\n            break;\r\n        case 'UPDATE_MAP_ADDRESS':\r\n            state = { ...state, map_address: action.payload };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default dataReducer;","import { combineReducers, createStore } from 'redux';\r\nimport operatorReducer from './reducers/Operator-reducer';\r\nimport dataReducer from './reducers/Data-reducer';\r\n\r\n// Combine reducers\r\nconst rootReducer = combineReducers({\r\n    operator: operatorReducer,\r\n    data: dataReducer\r\n});\r\n\r\n// Set initial state\r\nconst initialState = {\r\n    operator: {\r\n        activeScreen: 'Categories',\r\n        action: ''\r\n    },\r\n    data: {\r\n        categories: [{\r\n            date: '31.7.2019, 17:11:43',\r\n            locations: {\r\n                'Delaware Beach House': {\r\n                    address: '51 Baltimore Ave, Rehoboth Beach, DE 19971, USA',\r\n                    lat: 38.7171603,\r\n                    lng: -75.0812477,\r\n                },\r\n                'Lincoln City Beach House': {\r\n                    address: '4567 SW Beach Ave, Lincoln City, OR 97367, USA',\r\n                    lat: 44.9319352,\r\n                    lng: -124.02391790000001,\r\n                },\r\n                'Long Island Beach House': {\r\n                    address: '55 S Elmwood Ave, Montauk, NY 11954, USA',\r\n                    lat: 41.0339355,\r\n                    lng: -71.94328710000002\r\n                },\r\n                'Miami Beach House': {\r\n                    address: '200 S Biscayne Blvd, Miami, FL 33131, USA',\r\n                    lat: 25.7721982,\r\n                    lng: -80.1881477\r\n                },\r\n                'Outer Banks Beach House': {\r\n                    address: '42050 Cedar Cir, Avon, NC 27915, USA',\r\n                    lat: 35.3305316,\r\n                    lng: -75.50870980000002\r\n                }\r\n            },\r\n            name: 'My Beach Houses (Example)'\r\n        }],\r\n        locations_count: 5,\r\n        input_category: '',\r\n        view_mode: '',\r\n        input_location: {},\r\n        selected_category: '',\r\n        selected_location: '',\r\n        ungrouped_category: 'My Beach Houses (Example)',\r\n        is_category_dialog_open: false,\r\n        is_location_dialog_open: false\r\n    }\r\n}\r\n\r\n// Set state: if previous state exists in local storage load it, \r\n// otherwise set initialState\r\nconst persistedState = localStorage.getItem('reduxState') ?\r\n    JSON.parse(localStorage.getItem('reduxState')) : initialState;\r\n\r\n// Create store\r\nconst store = createStore(rootReducer, persistedState);\r\n\r\n// Subscribe to store state changes and save each new state to local storage\r\nstore.subscribe(() => {\r\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()));\r\n});\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route, hashHistory } from 'react-router';\nimport App from './components/App/App';\nimport './index.css';\n\nimport { Provider } from 'react-redux'\nimport store from './components/App/redux/App-store'\n\n\n// This component is responsible for assigning Routes to different pages.\n// In our case, we will assign a single Route to App\n// If we want to add more pages in the future, we will assign them a Route from here\nclass Root extends Component {\n    render() {\n        return (\n            // Note that because this app is deployed to Github Pages,\n            // we use hashHistory instead of browserHistory because\n            <Router history={hashHistory}>\n                <Route path='/' component={App}></Route>\n                {/* ... More Routes */}\n            </Router>\n        );\n    }\n}\n\nReactDOM.render(<Provider store={store}><Root /></Provider>, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/locations.2077207c.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.b969e9fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.a58d3d11.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.6690bdd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/categories.a8fb9acf.svg\";","module.exports = __webpack_public_path__ + \"static/media/copy.add831dd.svg\";"],"sourceRoot":""}