{"version":3,"sources":["components/App/components/Locations/images/arrow.svg","components/App/components/Categories/images/category.svg","components/App/redux/actions/Operator-actions.js","components/App/redux/actions/Data-actions.js","components/App/components/Locations/components/Location/Location.js","components/App/components/Locations/components/LocationViewer/components/MapContainer/MapContainer.js","components/App/components/Locations/components/LocationForm/LocationForm.js","components/App/components/Locations/components/LocationViewer/components/ViewerDialog/ViewerDialog.js","components/App/components/Locations/components/LocationViewer/components/PropertiesViewer/PropertiesViewer.js","components/App/components/Locations/components/LocationViewer/components/MapViewer/MapViewer.js","components/App/components/Locations/components/LocationViewer/LocationViewer.js","components/App/components/Locations/Locations.js","components/App/components/Categories/components/Category/Category.js","components/App/components/Categories/components/CategoryForm/CategoryForm.js","components/App/components/Categories/Categories.js","components/App/App.js","components/App/redux/reducers/Operator-reducer.js","components/App/redux/reducers/Data-reducer.js","components/App/redux/App-store.js","index.js","components/App/images/locations.svg","components/App/images/add.svg","components/App/images/edit.svg","components/App/images/remove.svg","components/App/images/categories.svg","components/App/components/Locations/images/copy.svg"],"names":["module","exports","__webpack_require__","p","setAction","action","type","payload","setSelectedCategory","name","setSelectedLocation","setUngroupedCategory","setViewMode","mode","updateLocationInput","input","setLocationDialogState","state","setCategoryDialogState","Location","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleLocationClick","bind","assertThisInitialized","category","removeLocation","locations_count","disableCurrentAction","Vibration","vibrate","react_default","a","createElement","className","concat","color","is_location_dialog_open","onClick","Component","connect","operator","data","dispatch","actions_operator","actions_data","MapContainer","handleChange","location","newInput","objectSpread","input_location","address","lat","position","lng","updateCoords","lib_default","containerElement","style","height","mapElement","maxWidth","defaultPosition","Number","onChange","LocationForm","inputRefs","React","createRef","formAddressContainerRef","formSubmitRef","fillControlledElements","handleSubmit","handleSelect","setCoords","getLocationInputs","getGeoCodeFromPlaceId","closeForm","formFilled","current","classList","remove","userInputs","keys","filter","key","length","add","_this2","categories_data","find","val","selected_category","locations","selected_location","value","forEach","userInput","re","RegExp","latValid","match","lngValid","toast","error","setTimeout","info","focus","place_id","_this3","geocodeByPlaceId","then","results","geometry","catch","console","e","target","suggestion","_this4","preventDefault","locationNameAlreadyExistsInCategory","timeoutAnimation","addLocation","editLocation","firstEmptyInputRef","currentInputRef","addressEmpty","i","onMouseDown","onSubmit","htmlFor","data-name","required","ref","map","maxLength","placeholder","autoComplete","react_google_places_autocomplete_dist_default","initialValue","onSelect","data-tip","components_MapContainer_MapContainer","data-wait","dist_default","categories","ViewerDialog","PropertiesViewer","copyField","fieldsRefs","coordinates","fieldToCopy","getAttribute","fieldText","innerText","replace","document","opacity","body","appendChild","select","execCommand","charAt","toUpperCase","slice","autoClose","src","copyIcon","copy","width","alt","MapViewer","mapContainerRef","firstChild","google_maps_react_dist","google","zoom","initialCenter","GoogleApiWrapper","apiKey","LocationViewer","getViewData","ungrouped_category","view_mode","components_ViewerDialog_ViewerDialog","components_PropertiesViewer_PropertiesViewer","components_MapViewer_MapViewer","Locations","ungroupCategory","toggleCategory","colors","swal","warn","arguments","undefined","currentTarget","resetLocationInput","clicked_category","locations_size","contains","locationsIcon","addIcon","editIcon","removeIcon","arrowIcon","sort","location_name","j","components_Location_Location","components_LocationViewer_LocationViewer","components_LocationForm_LocationForm","Category","handleCategoryClick","removeFunc","removeCategory","numLocations","str","title","text","dangerMode","buttons","willRemove","is_category_dialog_open","categoryIcon","date","CategoryForm","updateCategoryInput","trim","userInput_category","input_category","addCategory","editCategory","autoFocus","id","Categories","resetCategoryInput","categoriesIcon","components_Category_Category","components_CategoryForm_CategoryForm","App","activateScreen","nextScreen","activeScreen","updateActiveScreen","resetAction","components_Categories_Categories","components_Locations_Locations","screen-ref","react_toastify","hideProgressBar","screen","operatorReducer","dataReducer","Date","toLocaleString","toConsumableArray","newLocation","defineProperty","updatedLocations","map_position","map_address","rootReducer","combineReducers","persistedState","localStorage","getItem","JSON","parse","Delaware Beach House","Lincoln City Beach House","Long Island Beach House","Miami Beach House","Outer Banks Beach House","store","createStore","subscribe","setItem","stringify","getState","Root","es","history","hashHistory","path","component","ReactDOM","render","react_redux_es","src_Root","getElementById"],"mappings":"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","file":"static/js/main.f730953c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.cefc206c.svg\";","module.exports = __webpack_public_path__ + \"static/media/category.92509915.svg\";","export function activateScreen(screen) {\r\n    return { type: 'ACTIVATE_SCREEN', payload: screen };\r\n}\r\n\r\nexport function setAction(action) {\r\n    return { type: 'SET_ACTION', payload: action };\r\n}\r\n\r\nexport function resetAction() {\r\n    return { type: 'RESET_ACTION' }\r\n}","export function addCategory(name) {\r\n    return { type: 'ADD_CATEGORY', payload: name };\r\n}\r\n\r\nexport function addLocation(name) {\r\n    return { type: 'ADD_LOCATION', payload: name };\r\n}\r\n\r\nexport function editCategory(input) {\r\n    return { type: 'EDIT_CATEGORY', payload: input };\r\n}\r\n\r\nexport function editLocation(input) {\r\n    return { type: 'EDIT_LOCATION', payload: input };\r\n}\r\n\r\nexport function removeCategory(name) {\r\n    return { type: 'REMOVE_CATEGORY', payload: name };\r\n}\r\n\r\nexport function removeLocation(name) {\r\n    return { type: 'REMOVE_LOCATION', payload: name };\r\n}\r\n\r\nexport function resetCategoryInput() {\r\n    return { type: 'RESET_CATEGORY_INPUT' };\r\n}\r\n\r\nexport function resetLocationInput() {\r\n    return { type: 'RESET_LOCATION_INPUT' };\r\n}\r\n\r\nexport function setSelectedCategory(name) {\r\n    return { type: 'SET_SELECTED_CATEGORY', payload: name };\r\n}\r\n\r\nexport function setSelectedLocation(name) {\r\n    return { type: 'SET_SELECTED_LOCATION', payload: name };\r\n}\r\n\r\nexport function setUngroupedCategory(name) {\r\n    return { type: 'SET_UNGROUPED_CATEGPRY', payload: name };\r\n}\r\n\r\nexport function setViewMode(mode) {\r\n    return { type: 'SET_VIEW_MODE', payload: mode };\r\n}\r\n\r\nexport function updateCategoryInput(input) {\r\n    return { type: 'UPDATE_CATEGORY_INPUT', payload: input };\r\n}\r\n\r\nexport function updateLocationInput(input) {\r\n    return { type: 'UPDATE_LOCATION_INPUT', payload: input };\r\n}\r\n\r\nexport function updateMapPosition(position) {\r\n    return { type: 'UPDATE_MAP_POSITION', payload: position };\r\n}\r\n\r\nexport function updateMapAddress(address) {\r\n    return { type: 'UPDATE_MAP_ADDRESS', payload: address };\r\n}\r\n\r\nexport function setLocationDialogState(state) {\r\n    return { type: 'SET_LOCATION_DIALOG_STATE', payload: state };\r\n}\r\n\r\nexport function setCategoryDialogState(state) {\r\n    return { type: 'SET_CATEGORY_DIALOG_STATE', payload: state };\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Vibration } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport * as actions_operator from '../../../../redux/actions/Operator-actions';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\n\r\nclass Location extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLocationClick = this.handleLocationClick.bind(this);\r\n    }\r\n\r\n    // This function handles location click according to the current action\r\n    handleLocationClick() {\r\n        this.props.setSelectedLocation(this.props.name);\r\n\r\n        if (this.props.action !== '') { // action ADD/EDIT/REMOVE\r\n            this.props.setSelectedCategory(this.props.category);\r\n\r\n            if (this.props.action === 'REMOVE') {\r\n                this.props.removeLocation(this.props.name);\r\n\r\n                if (this.props.locations_count === 1) {\r\n                    this.props.disableCurrentAction(null, true);\r\n                    this.props.setUngroupedCategory('');\r\n                }\r\n            }\r\n        } else { // No action - vibrate!\r\n            Vibration.vibrate(500);\r\n            this.props.setAction('VIEW');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h6 className={`category-item-location ${this.props.color} \r\n            ${!this.props.is_location_dialog_open ?\r\n                    (this.props.action === 'EDIT' ?\r\n                        'shaking edit' : (this.props.action === 'REMOVE' ? 'shaking remove' : '')) : ''}`}\r\n                onClick={this.handleLocationClick}>{this.props.name}</h6>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        is_location_dialog_open: state.data.is_location_dialog_open,\r\n        locations_count: state.data.locations_count\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAction: (action) => dispatch(actions_operator.setAction(action)),\r\n        removeLocation: (name) => dispatch(actions_data.removeLocation(name)),\r\n        setSelectedLocation: (name) => dispatch(actions_data.setSelectedLocation(name)),\r\n        setSelectedCategory: (name) => dispatch(actions_data.setSelectedCategory(name)),\r\n        setUngroupedCategory: (name) => dispatch(actions_data.setUngroupedCategory(name))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);\r\n","import React, { Component } from 'react';\r\nimport LocationPicker from 'react-location-picker';\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../../../redux/actions/Data-actions';\r\n\r\nclass MapContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    // This function handles manual marker position change\r\n    // It updates the state and the coordinates input\r\n    handleChange(location) {\r\n        let newInput = { ...this.props.input_location };\r\n        newInput.address = location.address;\r\n        newInput.lat = location.position.lat;\r\n        newInput.lng = location.position.lng;\r\n\r\n        this.props.updateLocationInput(newInput);\r\n        this.props.updateCoords();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <LocationPicker\r\n                containerElement={<div style={{ height: '100%' }} />}\r\n                mapElement={<div style={{ maxWidth: '450px', height: '173px' }} />}\r\n                defaultPosition={{\r\n                    lat: this.props.input_location.lat == null ?\r\n                        25.761681 : Number(this.props.input_location.lat),\r\n                    lng: this.props.input_location.lng == null ?\r\n                        -80.191788 : Number(this.props.input_location.lng)\r\n                }}\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        input_location: state.data.input_location\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateLocationInput: (input) => dispatch(actions_data.updateLocationInput(input))\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapContainer);\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\r\nimport { geocodeByPlaceId } from 'react-google-places-autocomplete';\r\nimport MapContainer from '../LocationViewer/components/MapContainer/MapContainer';\r\nimport '../../../../App.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\nclass LocationForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.inputRefs = {\r\n            category: React.createRef(),\r\n            name: React.createRef(),\r\n            address: React.createRef(),\r\n            lat: React.createRef(),\r\n            lng: React.createRef()\r\n        };\r\n        this.formAddressContainerRef = React.createRef();\r\n        this.formSubmitRef = React.createRef();\r\n\r\n        this.fillControlledElements = this.fillControlledElements.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.setCoords = this.setCoords.bind(this);\r\n        this.updateCoords = this.updateCoords.bind(this);\r\n        this.getLocationInputs = this.getLocationInputs.bind(this);\r\n        this.getGeoCodeFromPlaceId = this.getGeoCodeFromPlaceId.bind(this);\r\n        this.closeForm = this.closeForm.bind(this);\r\n        this.formFilled = false;\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // If the used clicked 'EDIT', fill the form with the existing data\r\n        if (this.props.action === 'EDIT') {\r\n            this.fillControlledElements();\r\n            this.formSubmitRef.current.classList.remove('inactive');\r\n        }\r\n\r\n        this.props.setLocationDialogState(true);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // On update, set 'this.formFilled'\r\n        // This is used to bypass default functionality of <form/> element,\r\n        // with the aim of activating/deactivating the form submit button (style wise)\r\n\r\n        let userInputs = this.getLocationInputs();\r\n        this.formFilled = Object.keys(userInputs)\r\n            .filter((key) => { return !userInputs[key] || userInputs[key].length === 0 }).length === 0;\r\n\r\n        if (this.formFilled) {\r\n            this.formSubmitRef.current.classList.remove('inactive');\r\n        } else {\r\n            this.formSubmitRef.current.classList.add('inactive');\r\n        }\r\n    }\r\n\r\n    // This function fills the form with the existing location data\r\n    fillControlledElements() {\r\n        let locationCategory = this.props.categories_data\r\n            .find(val => val.name === this.props.selected_category);\r\n        let location = locationCategory.locations[this.props.selected_location];\r\n\r\n\r\n        this.inputRefs.name.current.value = this.props.selected_location;\r\n        Object.keys(this.inputRefs).forEach((key) => {\r\n            if (key !== 'name' && key !== 'category') {\r\n                this.inputRefs[key].current.value = location[key];\r\n            }\r\n        });\r\n\r\n        let userInputs = {\r\n            category: this.props.selected_category,\r\n            name: this.props.selected_location,\r\n            address: location.address,\r\n            lat: location.lat,\r\n            lng: location.lng\r\n        }\r\n\r\n        this.props.updateLocationInput(userInputs);\r\n        this.formFilled = true;\r\n    }\r\n\r\n    // This function sets the coordinates input to state,\r\n    // which in turn locates the map's marker accordingly\r\n    setCoords() {\r\n        let userInput = this.getLocationInputs();\r\n        let lat = this.inputRefs.lat.current.value;\r\n        let lng = this.inputRefs.lng.current.value;\r\n\r\n        let re = new RegExp(/^[-|+]?[0-9]*\\.?[0-9]+$/g);\r\n        let latValid = lat.match(re), lngValid = lng.match(re);\r\n        let inputValid = latValid && lngValid;\r\n\r\n        if (!inputValid) {\r\n            toast.error('Coordinates must be valid numbers');\r\n            setTimeout(() => {\r\n                toast.info('Press \\'SET\\' to revalidate');\r\n            }, 500);\r\n\r\n            if (!latValid) {\r\n                this.inputRefs.lat.current.classList.add('input-error');\r\n                this.inputRefs.lat.current.focus();\r\n            }\r\n            if (!lngValid) {\r\n                this.inputRefs.lng.current.classList.add('input-error');\r\n                if (latValid) {\r\n                    this.inputRefs.lng.current.focus();\r\n                }\r\n            }\r\n        } else if (lat !== userInput.lat || lng !== userInput.lng) {\r\n            userInput.lat = lat;\r\n            userInput.lng = lng;\r\n\r\n\r\n            this.props.updateLocationInput(userInput);\r\n        }\r\n    }\r\n\r\n    // This function updates the coordinates inputs\r\n    // Triggered by subcomponent MapContainer \r\n    // (Each time the user moves the marker manually, this function is called)\r\n    updateCoords() {\r\n        this.inputRefs.lat.current.value = this.props.input_location.lat;\r\n        this.inputRefs.lng.current.value = this.props.input_location.lng;\r\n    }\r\n\r\n    // This function gets the location inputs from state\r\n    getLocationInputs() {\r\n        return {\r\n            category: this.props.input_location.category,\r\n            name: this.props.input_location.name,\r\n            address: this.props.input_location.address,\r\n            lat: this.props.input_location.lat,\r\n            lng: this.props.input_location.lng\r\n        }\r\n    }\r\n\r\n    // This nested function searches the coordinates of an address \r\n    // suggested from GoogleAutocomplete (address input) and when found,\r\n    // sets it to the coordinates input\r\n    getGeoCodeFromPlaceId(place_id) {\r\n        geocodeByPlaceId(place_id)\r\n            .then(results => {\r\n                let location = results[0].geometry.location;\r\n                let lat = location.lat();\r\n                let lng = location.lng();\r\n\r\n                this.inputRefs.lat.current.value = lat;\r\n                this.inputRefs.lng.current.value = lng;\r\n                this.inputRefs.lat.current.classList.remove('input-error');\r\n                this.inputRefs.lng.current.classList.remove('input-error');\r\n\r\n                let newInput = {\r\n                    category: this.props.input_location.category,\r\n                    name: this.props.input_location.name,\r\n                    address: this.props.input_location.address,\r\n                    lat: lat,\r\n                    lng: lng\r\n                }\r\n                this.props.updateLocationInput(newInput);\r\n            })\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    // This function updates state with changed input\r\n    handleChange(e) {\r\n        e.target.classList.remove('input-error');\r\n\r\n        let userInputs = this.getLocationInputs();\r\n        userInputs[e.target.name] = e.target.value;\r\n\r\n        this.props.updateLocationInput(userInputs);\r\n    }\r\n\r\n    // This function updates the coordinates according to an address suggestion\r\n    handleSelect(suggestion) {\r\n        this.formAddressContainerRef.current.classList.remove('input-error');\r\n        this.getGeoCodeFromPlaceId(suggestion.place_id);\r\n    }\r\n\r\n    // This function handles form submit\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let userInputs = this.getLocationInputs();\r\n\r\n        // Form fully filled\r\n        if (this.formFilled) {\r\n\r\n            // Check if location name already exists in category\r\n            let locationNameAlreadyExistsInCategory = false;\r\n            Object.keys(this.props.categories_data.find(val => val.name === userInputs.category).locations).forEach((key) => {\r\n                if (key === userInputs.name && key !== this.props.selected_location) {\r\n                    locationNameAlreadyExistsInCategory = true;\r\n                }\r\n            })\r\n\r\n            // Add 'input-error' class and focus if needed\r\n            if (locationNameAlreadyExistsInCategory) {\r\n                this.inputRefs.name.current.classList.add('input-error');\r\n                toast.error('Location with this name already exists in this category!');\r\n                this.inputRefs.name.current.focus();\r\n            } else {\r\n                // Replace the original values of the coordinates if needed\r\n                let timeoutAnimation = false;\r\n                if (this.inputRefs.lat.current.value !== userInputs.lat) {\r\n                    this.inputRefs.lat.current.value = userInputs.lat;\r\n                    timeoutAnimation = true;\r\n                }\r\n                if (this.inputRefs.lng.current.value !== userInputs.lng) {\r\n                    this.inputRefs.lng.current.value = userInputs.lng;\r\n                    if (!timeoutAnimation) {\r\n                        timeoutAnimation = true;\r\n                    }\r\n                }\r\n\r\n                // Submit action\r\n                switch (this.props.action) {\r\n                    case 'ADD':\r\n                        this.props.addLocation(userInputs);\r\n                        break;\r\n                    case 'EDIT':\r\n                        this.props.editLocation(userInputs);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                // Close form\r\n                if (timeoutAnimation) {\r\n                    setTimeout(() => {\r\n                        this.closeForm();\r\n                    }, 50);\r\n                } else {\r\n                    this.closeForm();\r\n                }\r\n\r\n            }\r\n        } else { // Form not fully filled\r\n\r\n            // Add 'input-error' class to unfilled inputs\r\n            let firstEmptyInputRef, currentInputRef;\r\n            let addressEmpty = false;\r\n\r\n            Object.keys(userInputs).forEach((key, i) => {\r\n                if (!userInputs[key]) {\r\n\r\n                    if (key === 'address') {\r\n                        currentInputRef = this.formAddressContainerRef;\r\n                        addressEmpty = true;\r\n                    } else {\r\n                        currentInputRef = this.inputRefs[key];\r\n                    }\r\n\r\n                    currentInputRef.current.classList.add('input-error');\r\n\r\n                    if (!firstEmptyInputRef) {\r\n                        firstEmptyInputRef = currentInputRef;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Toast information to user\r\n            toast.error('Fill all fields first!');\r\n\r\n            if (addressEmpty) {\r\n                setTimeout(() => {\r\n                    toast.info('Note that Address is autocomplete only');\r\n                }, 500);\r\n            }\r\n\r\n            // Focus first unfilled input\r\n            firstEmptyInputRef.current.focus();\r\n        }\r\n    }\r\n\r\n    // This function closes the form\r\n    closeForm() {\r\n        this.props.closeForm(null, true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"component-form-container\" onMouseDown={this.props.closeForm}>\r\n                <div className=\"component-form w-form\">\r\n                    <form className=\"component-form-inner\" onSubmit={this.handleSubmit}>\r\n                        <div className='form-x-button-container'><h4 className='form-x-button' onClick={this.closeForm}>✖</h4></div>\r\n                        {this.props.action === 'ADD' && <label htmlFor=\"category\" className=\"form-field-label\">Location Category</label>}\r\n                        {this.props.action === 'ADD' &&\r\n                            <select data-name=\"category\" name=\"category\" required=\"\"\r\n                                className=\"select-field w-select\" onChange={this.handleChange} ref={this.inputRefs.category}>\r\n                                <option value=\"\">Select category...</option>\r\n                                {this.props.categories_data.map((category, i) => {\r\n                                    return <option value={category.name} key={i}>{category.name}</option>\r\n                                })}\r\n                            </select>}\r\n                        <label htmlFor=\"name\" className=\"form-field-label\">Location Name</label>\r\n                        <input className=\"text-field-form w-input\" maxLength=\"256\" name=\"name\" data-name=\"name\"\r\n                            placeholder=\"My Beach House\" type=\"text\" required=\"\" autoComplete=\"off\" onChange={this.handleChange} ref={this.inputRefs.name} />\r\n                        <label htmlFor=\"address\" className=\"form-field-label\">Location Address</label>\r\n                        <div className=\"google-places-autocomplete-container\" ref={this.formAddressContainerRef}>\r\n                            <GooglePlacesAutocomplete maxLength=\"256\" name=\"address\" data-name=\"address\"\r\n                                placeholder=\"18555 Collins Ave, Sunny Isles Beach, FL\" type=\"text\" required=\"\" autoComplete=\"off\"\r\n                                initialValue={this.props.input_location.address} onSelect={this.handleSelect}\r\n                                onChange={this.handleChange} ref={this.inputRefs.address} /></div>\r\n                        <div className=\"component-form-coords\">\r\n                            <div className=\"component-form-coords-manual\">\r\n                                <label htmlFor=\"lat\" className=\"form-field-label\">lat</label>\r\n                                <input className=\"component-form-coords-textfield w-input\" maxLength=\"256\" name=\"lat\"\r\n                                    data-name=\"lat\" placeholder=\"25.761681\" type=\"text\" required=\"\" autoComplete=\"off\" ref={this.inputRefs.lat} />\r\n                                <label htmlFor=\"lng\" className=\"form-field-label\">lng</label>\r\n                                <input className=\"component-form-coords-textfield w-input\" maxLength=\"256\" name=\"lng\"\r\n                                    data-name=\"lng\" placeholder=\"-80.191788\" type=\"text\" required=\"\" autoComplete=\"off\" ref={this.inputRefs.lng} />\r\n                                <div className=\"component-form-coords-button\" data-tip=\"Set the marker position by coordinates\" onClick={this.setCoords}>SET</div>\r\n                            </div>\r\n                            <div className=\"component-form-coords-map\"><MapContainer updateCoords={this.updateCoords} /></div>\r\n                        </div>\r\n                        <input type=\"submit\" data-wait=\"Please wait...\"\r\n                            className=\"component-form-submit w-button inactive\" value=\"APPLY\" ref={this.formSubmitRef} />\r\n                    </form>\r\n                </div>\r\n                <ReactTooltip />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        selected_location: state.data.selected_location,\r\n        selected_category: state.data.selected_category,\r\n        input_location: state.data.input_location\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addLocation: (name) => dispatch(actions_data.addLocation(name)),\r\n        editLocation: (input) => dispatch(actions_data.editLocation(input)),\r\n        updateLocationInput: (input) => dispatch(actions_data.updateLocationInput(input)),\r\n        setLocationDialogState: (state) => dispatch(actions_data.setLocationDialogState(state))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationForm);","import React, { Component } from 'react';\r\nimport '../../LocationViewer.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../../../redux/actions/Data-actions';\r\n\r\nclass ViewerDialog extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view-location-dialog\">\r\n                <h5 className=\"heading-4\">{this.props.selected_location}</h5>\r\n                <div className=\"view-location-dialog-buttons\">\r\n                    <button className=\"button w-button\" onClick={() => { this.props.setViewMode('properties'); }}>View Properties</button>\r\n                    <button className=\"button w-button\" onClick={() => { this.props.setViewMode('map'); }}>View Map</button>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        selected_location: state.data.selected_location\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setViewMode: (mode) => dispatch(actions_data.setViewMode(mode)),\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewerDialog);","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport copyIcon from '../../../../images/copy.svg';\r\n\r\nclass PropertiesViewer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.copyField = this.copyField.bind(this);\r\n        this.fieldsRefs = {\r\n            address: React.createRef(),\r\n            coordinates: React.createRef(),\r\n            category: React.createRef()\r\n        }\r\n    }\r\n\r\n    // This function copies a property field to clipboard\r\n    copyField(e) {\r\n        let fieldToCopy = e.target.getAttribute('copy');\r\n        let fieldText = this.fieldsRefs[fieldToCopy].current.innerText.replace(/\\n/g, '');\r\n        let input = document.createElement('input');\r\n\r\n        input.style.opacity = '0';\r\n        input.style['pointer-events'] = 'none';\r\n        document.body.appendChild(input);\r\n        input.value = fieldText;\r\n        input.focus();\r\n        input.select();\r\n        document.execCommand('copy');\r\n        input.remove();\r\n\r\n        toast.info(`${fieldToCopy.charAt(0).toUpperCase()}${fieldToCopy.slice(1)} copied to clipboard!`, { autoClose: 1500 });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view-location-properties\">\r\n                <h1 className=\"heading-location-viewer\">{this.props.data.name}</h1>\r\n                <div className=\"seperator-4\">\r\n                </div>\r\n                <h1 className=\"label\">Address</h1>\r\n                <div className=\"property-value-container\">\r\n                    <img src={copyIcon} onClick={this.copyField} copy=\"address\" width=\"25\" data-tip=\"Copy\" alt=\"\" className=\"image-copy-property\" />\r\n                    <h1 className=\"heading-location-property\" ref={this.fieldsRefs.address}>{this.props.data.address}</h1>\r\n                </div>\r\n                <h1 className=\"label\">Coordinates</h1>\r\n                <div className=\"property-value-container\">\r\n                    <img src={copyIcon} onClick={this.copyField} copy=\"coordinates\" data-tip=\"Copy\" width=\"25\" alt=\"\" className=\"image-copy-property\" />\r\n                    <h1 className=\"heading-location-property\" ref={this.fieldsRefs.coordinates}>\r\n                        <strong>lat</strong>:&nbsp;{this.props.data.position.lat}\r\n                        &#44;&nbsp;<strong>lng</strong>:{this.props.data.position.lng}</h1>\r\n                </div>\r\n                <h1 className=\"label\">Category</h1>\r\n                <div className=\"property-value-container\">\r\n                    <img src={copyIcon} onClick={this.copyField} copy=\"category\" data-tip=\"Copy\" width=\"25\" alt=\"\" className=\"image-copy-property\" />\r\n\r\n                    <h1 className=\"heading-location-property\" ref={this.fieldsRefs.category}>{this.props.data.category}</h1>\r\n                </div><button className=\"view-location-properties-button w-button\" onClick={this.props.closeForm}>Close</button>\r\n                <ReactTooltip />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PropertiesViewer;","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nclass MapViewer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.mapContainerRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mapContainerRef.current.firstChild.style = \"maxWidth: '435px;'\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view-location-map\">\r\n                <h1 className=\"heading-location-viewer\">{this.props.data.name}</h1>\r\n                <div className=\"seperator-4\">\r\n                </div>\r\n                <div className=\"view-location-map-map-container\" ref={this.mapContainerRef}>\r\n                    <Map\r\n                        google={this.props.google}\r\n                        zoom={18}\r\n                        style={{ height: '450px', position: 'relative' }}\r\n                        initialCenter={this.props.data.position}>\r\n                        <Marker position={this.props.data.position} />\r\n                    </Map>\r\n                </div>\r\n                <button className=\"view-location-map-button w-button\" onClick={this.props.closeForm}>Close</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({ apiKey: 'AIzaSyB_FOwuZf9hp8EzcKh1Dky70NBETQBO_a8' })(MapViewer);","import React, { Component } from 'react';\r\nimport ViewerDialog from './components/ViewerDialog/ViewerDialog'\r\nimport PropertiesViewer from './components/PropertiesViewer/PropertiesViewer'\r\nimport MapViewer from './components/MapViewer/MapViewer';\r\nimport './LocationViewer.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\nclass LocationViewer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getViewData = this.getViewData.bind(this);\r\n        this.data = this.getViewData();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setViewMode('dialog');\r\n    }\r\n\r\n    // This function gets the location data\r\n    // It is used to pass the data to subcomponents later on\r\n    getViewData() {\r\n        let location = this.props.categories_data\r\n        .find(val => val.name === this.props.ungrouped_category)\r\n        .locations[this.props.selected_location];\r\n\r\n        return {\r\n            category: this.props.ungrouped_category,\r\n            name: this.props.selected_location,\r\n            address: location.address,\r\n            position: {lat: location.lat, lng: location.lng}\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view-location-container\" onMouseDown={this.props.closeForm}>\r\n                {this.props.view_mode === 'dialog' && <ViewerDialog />}\r\n                {this.props.view_mode === 'properties' && <PropertiesViewer  closeForm={this.props.closeForm} data={this.data}/>}\r\n                {this.props.view_mode === 'map' && <MapViewer closeForm={this.props.closeForm} data={this.data}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories_data: state.data.categories,\r\n        selected_location: state.data.selected_location,\r\n        ungrouped_category: state.data.ungrouped_category,\r\n        view_mode: state.data.view_mode\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setViewMode: (mode) => dispatch(actions_data.setViewMode(mode))\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationViewer);","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport swal from 'sweetalert';\r\nimport Location from './components/Location/Location';\r\nimport LocationForm from './components/LocationForm/LocationForm';\r\nimport LocationViewer from './components/LocationViewer/LocationViewer';\r\nimport locationsIcon from '../../images/locations.svg';\r\nimport addIcon from '../../images/add.svg';\r\nimport editIcon from '../../images/edit.svg';\r\nimport removeIcon from '../../images/remove.svg';\r\nimport arrowIcon from './images/arrow.svg';\r\nimport './Locations.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_operator from '../../redux/actions/Operator-actions';\r\nimport * as actions_data from '../../redux/actions/Data-actions';\r\n\r\nclass Locations extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addLocation = this.addLocation.bind(this);\r\n        this.editLocation = this.editLocation.bind(this);\r\n        this.removeLocation = this.removeLocation.bind(this);\r\n        this.disableCurrentAction = this.disableCurrentAction.bind(this);\r\n        this.ungroupCategory = this.ungroupCategory.bind(this);\r\n        this.toggleCategory = this.toggleCategory.bind(this);\r\n\r\n        this.colors = ['blue', 'orange', 'red', 'purple', 'green'];\r\n    }\r\n\r\n    // This function sets/cancels 'ADD' action to state (for Add mode)\r\n    // Triggered by 'ADD' toolbar button\r\n    addLocation() {\r\n        if (this.props.categories_data.length > 0) {\r\n            this.disableCurrentAction(null, true);\r\n            this.props.setAction('ADD');\r\n        } else { // No categories yet\r\n            swal('Before adding a location, please add at least 1 category through the Categories screen');\r\n        }\r\n\r\n    }\r\n\r\n    // This function sets/cancels 'EDIT' action to state (for Edit mode)\r\n    // Triggered by 'EDIT' toolbar button\r\n    editLocation() {\r\n        if (this.props.locations_count > 0) {\r\n            if (this.props.action === 'EDIT') { // Cancel action\r\n                this.props.setAction('');\r\n            } else { // Set new action\r\n                this.disableCurrentAction(null, true);\r\n                this.props.setAction('EDIT');\r\n            }\r\n        } else { // No locations to edit yet\r\n            toast.warn('No locations to edit. Try adding one');\r\n        }\r\n    }\r\n\r\n    // This function sets/cancels 'REMOVE' action to state (for Remove mode)\r\n    // Triggered by 'REMOVE' toolbar button\r\n    removeLocation() {\r\n        if (this.props.locations_count > 0) {\r\n            if (this.props.action === 'REMOVE') { // Cancel action\r\n                this.props.setAction('');\r\n            } else { // Set new action\r\n                this.disableCurrentAction(null, true);\r\n                this.props.setAction('REMOVE');\r\n            }\r\n        } else { // No locations to remove yet\r\n            toast.warn('No locations to remove. Try adding one');\r\n        }\r\n    }\r\n\r\n    // This function disables any action (ADD/EDIT/REMOVE)\r\n    disableCurrentAction(e, controlled = false) {\r\n        if (controlled || e.target === e.currentTarget) {\r\n            this.props.setAction('');\r\n            this.props.setViewMode('');\r\n            this.props.setLocationDialogState(false);\r\n            this.props.setSelectedLocation('');\r\n            this.props.setSelectedCategory('');\r\n            this.props.resetLocationInput();\r\n        }\r\n    }\r\n\r\n    // This function ungroups a category\r\n    ungroupCategory(e) {\r\n        let clicked_category = e.currentTarget.getAttribute('category');\r\n        let locations_size = Number(e.currentTarget.getAttribute('locations_size'));\r\n\r\n        // Only ungroup categories with locations\r\n        if (e.currentTarget.classList.contains('grouped') && locations_size > 0) {\r\n            this.props.setUngroupedCategory(clicked_category);\r\n        }\r\n    }\r\n\r\n    // This function toggles a category\r\n    toggleCategory(e) {\r\n        let clicked_category = e.target.getAttribute('category');\r\n        let locations_size = Number(e.target.getAttribute('locations_size'));\r\n\r\n        if (this.props.ungrouped_category === clicked_category) { // Same category\r\n            this.props.setUngroupedCategory('');\r\n        } else if (e.target.classList.contains('grouped') && locations_size > 0) { // Different category\r\n            this.props.setUngroupedCategory(clicked_category);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"locations\">\r\n                <div className=\"component-header\">\r\n                    <div className=\"component-header-icon-wrapper\">\r\n                        <img src={locationsIcon} width=\"25\" alt=\"\" /></div>\r\n                    <h1 className=\"heading-component h1\">\r\n                        Locations</h1>\r\n                    <div className=\"component-header-right-margin\"></div>\r\n                </div>\r\n                <div className=\"seperator-2\"></div>\r\n                <div className=\"component-toolbar\">\r\n                    <div className={`custom-button ${this.props.action === 'ADD' ? 'active' : 'inactive'}`} onClick={this.addLocation}>\r\n                        <img src={addIcon} width=\"20\" alt=\"\" />\r\n                        <h3 className=\"custom-heading\">Add</h3>\r\n                    </div>\r\n                    <div className={`custom-button ${this.props.action === 'EDIT' ? 'active' : 'inactive'}`} onClick={this.editLocation}>\r\n                        <img src={editIcon} width=\"20\" alt=\"\" />\r\n                        <h3 className=\"custom-heading\">Edit</h3>\r\n                    </div>\r\n                    <div className={`custom-button ${this.props.action === 'REMOVE' ? 'active' : 'inactive'}`} onClick={this.removeLocation}>\r\n                        <img src={removeIcon} width=\"20\" alt=\"\" />\r\n                        <h3 className=\"custom-heading\">Remove</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"seperator-3\"></div>\r\n                <div className=\"locations-list-container\">\r\n                    {\r\n                        this.props.categories_data.length > 0 ?\r\n                            this.props.categories_data.map((category, i) => {\r\n                                return <div className={`category ${this.props.ungrouped_category === category.name ? 'ungrouped' : 'grouped'}`}\r\n                                    key={i} category={category.name} locations_size={Object.keys(category.locations).length} onClick={this.ungroupCategory}>\r\n\r\n                                    <div className={`category-header ${this.props.ungrouped_category === category.name ? 'ungrouped' : 'grouped'}`}\r\n                                        category={category.name} locations_size={Object.keys(category.locations).length} onClick={this.toggleCategory} >\r\n\r\n                                        <img src={arrowIcon} category={category.name} width=\"20\" alt=\"\" className={`image-arrow-${this.props.ungrouped_category === category.name ? 'ungrouped' : 'grouped'}`} />\r\n                                        <h1 category={category.name} className=\"h1 body heading-location-list-item\" >Categoy: {category.name}</h1>\r\n                                    </div>\r\n\r\n                                    {this.props.ungrouped_category === category.name ? <div className=\"category-body\">\r\n                                        {\r\n                                            Object.keys(category.locations).sort().map((location_name, j) => {\r\n                                                return <Location name={location_name} category={category.name} key={j}\r\n                                                    color={this.colors[j % this.colors.length]} disableCurrentAction={this.disableCurrentAction}/>;\r\n                                            })\r\n                                        }\r\n                                    </div> :\r\n                                        <h6 className=\"category-item-sub-heading-2\">{Object.keys(category.locations).length} locations in this category</h6>}\r\n                                </div>\r\n                            }) :\r\n                            <div className=\"text-block\">No categories yet. Go back to the Categories and add one!</div>\r\n\r\n                    }\r\n                    {this.props.action === 'VIEW' && <LocationViewer closeForm={this.disableCurrentAction} />}\r\n                </div>\r\n                {(this.props.action === 'ADD' || (this.props.action === 'EDIT' && this.props.selected_location)) && <LocationForm closeForm={this.disableCurrentAction} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        selected_location: state.data.selected_location,\r\n        ungrouped_category: state.data.ungrouped_category,\r\n        locations_count: state.data.locations_count\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAction: (action) => dispatch(actions_operator.setAction(action)),\r\n        setUngroupedCategory: (category) => dispatch(actions_data.setUngroupedCategory(category)),\r\n        setSelectedLocation: (name) => dispatch(actions_data.setSelectedLocation(name)),\r\n        setSelectedCategory: (name) => dispatch(actions_data.setSelectedCategory(name)),\r\n        setLocationDialogState: (state) => dispatch(actions_data.setLocationDialogState(state)),\r\n        setViewMode: (mode) => dispatch(actions_data.setViewMode(mode)),\r\n        resetLocationInput: () => dispatch(actions_data.resetLocationInput())\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Locations);","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport categoryIcon from '../../images/category.svg'\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\nclass Category extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleCategoryClick = this.handleCategoryClick.bind(this);\r\n    }\r\n\r\n    // This function handles location click according to the current action\r\n    handleCategoryClick() {\r\n        if (this.props.action !== '') { // action ADD/EDIT/REMOVE\r\n            this.props.setSelectedCategory(this.props.name);\r\n\r\n            // If action is REMOVE and the category contains locations, \r\n            // ask the user for remove confirmation\r\n            if (this.props.action === 'REMOVE') {\r\n\r\n                // Define remove function\r\n                let removeFunc = () => {\r\n                    if (this.props.categories_data.length === 1) {\r\n                        this.props.disableCurrentAction(null, true);\r\n                    }\r\n                    this.props.removeCategory(this.props.name);\r\n                };\r\n\r\n                // Get number of locations in this category\r\n                let numLocations = Object.keys(this.props.categories_data.find(category => {\r\n                    return (category.name === this.props.name);\r\n                }).locations).length;\r\n                let str = numLocations > 1 ? 'locatios' : 'location';\r\n                \r\n                // Display warning if nececssary\r\n                if (numLocations > 0) {\r\n                    swal({\r\n                        title: 'Are you sure?',\r\n                        text: `This category contains ${numLocations} ${str}. \r\n                        Removing it wiil also remove the ${str}. Proceed?`,\r\n                        dangerMode: true,\r\n                        buttons: ['Cancel', 'Remove']\r\n                    }).then((willRemove) => {\r\n                        if (willRemove) {\r\n                            removeFunc();\r\n                        }\r\n                    })\r\n                } else {\r\n                    removeFunc();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`category ${!this.props.is_category_dialog_open ?\r\n                (this.props.action === 'EDIT' ?\r\n                    'shaking edit' : (this.props.action === 'REMOVE' ? 'shaking remove' : '')) : ''}`}\r\n                onClick={this.handleCategoryClick}>\r\n                <div className=\"category-header\"><img src={categoryIcon} width=\"30\" alt=\"\" />\r\n                    <h1 className=\"heading-category-list-item h1 body\">{this.props.name}</h1>\r\n                </div>\r\n                <h6 className=\"category-item-sub-heading\">Created on: {this.props.date}</h6>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        is_category_dialog_open: state.data.is_category_dialog_open,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeCategory: (name) => dispatch(actions_data.removeCategory(name)),\r\n        setSelectedCategory: (name) => dispatch(actions_data.setSelectedCategory(name)),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport '../../../../App.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_data from '../../../../redux/actions/Data-actions';\r\n\r\nclass CategoryForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.inputRefs = { name: React.createRef() };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.closeForm = this.closeForm.bind(this);\r\n\r\n        this.formFilled = this.props.action === 'EDIT';\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If the used clicked 'EDIT', fill the form with the existing data\r\n        if (this.props.action === 'EDIT') {\r\n            this.inputRefs.name.current.value = this.props.selected_category;\r\n        }\r\n\r\n        this.props.setCategoryDialogState(true);\r\n    }\r\n\r\n    // This function updates state with changed input\r\n    handleChange(e) {\r\n        this.inputRefs.name.current.classList.remove('input-error');\r\n        this.props.updateCategoryInput(e.target.value.trim());\r\n        this.formFilled = e.target.value && e.target.value.trim().length > 0;\r\n    }\r\n\r\n    // This function handles form submit\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let userInput_category = this.props.input_category || this.props.selected_category;\r\n        \r\n        // Form fully filled\r\n        if (this.formFilled) {\r\n            let inputChanged = userInput_category !== this.props.selected_category;\r\n\r\n            // Input did not change, close form\r\n            if (!inputChanged) {\r\n                this.closeForm();\r\n            } else { // Input changed\r\n\r\n                // Check if location name already exists in category\r\n                if (this.props.categories_data.find(val => val.name === userInput_category)) {\r\n                    this.inputRefs.name.current.classList.add('input-error');\r\n                    toast.error('Category with this name already exists!');\r\n                    this.inputRefs.name.current.focus();\r\n                } else {\r\n\r\n                    // Submit action\r\n                    switch (this.props.action) {\r\n                        case 'ADD':\r\n                            this.props.addCategory(userInput_category);\r\n                            break;\r\n                        case 'EDIT':\r\n                            this.props.editCategory(userInput_category);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    // Close form\r\n                    this.closeForm();\r\n                }\r\n            }\r\n\r\n        } else { // Form not fully filled\r\n\r\n            // Add 'input-error' class to the unfilled input, toast information & focus\r\n            this.inputRefs.name.current.classList.add('input-error');\r\n            toast.error('Empty input!', { autoClose: 1500 });\r\n            this.inputRefs.name.current.focus();\r\n        }\r\n    }\r\n\r\n    // This function closes the form\r\n    closeForm() {\r\n        this.props.closeForm(null, true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"component-form-container\" onMouseDown={this.props.closeForm}>\r\n                <div className=\"component-form w-form\">\r\n                    <form className=\"component-form-inner\" onSubmit={this.handleSubmit}>\r\n                        <div className='form-x-button-container'><h4 className='form-x-button' onClick={this.closeForm}>✖</h4></div>\r\n                        <label htmlFor=\"name\" className=\"form-field-label\">Category Name</label>\r\n                        <input className=\"text-field-form w-input\" autoFocus={true} maxLength=\"256\"\r\n                            name=\"name\" data-name=\"Name\" placeholder=\"&quot;My Beach Houses&quot;\" type=\"text\"\r\n                            id=\"name\" required=\"\" autoComplete=\"off\" onChange={this.handleChange} ref={this.inputRefs.name} />\r\n                        <input type=\"submit\" data-wait=\"Please wait...\"\r\n                            className={`component-form-submit w-button ${this.formFilled ? 'active' : 'inactive'}`} value=\"OK\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        input_category: state.data.input_category,\r\n        selected_category: state.data.selected_category\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addCategory: (name) => dispatch(actions_data.addCategory(name)),\r\n        editCategory: (input) => dispatch(actions_data.editCategory(input)),\r\n        updateCategoryInput: (input) => dispatch(actions_data.updateCategoryInput(input)),\r\n        setCategoryDialogState: (state) => dispatch(actions_data.setCategoryDialogState(state))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryForm);","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport Category from './components/Category/Category';\r\nimport CategoryForm from './components/CategoryForm/CategoryForm';\r\nimport categoriesIcon from '../../images/categories.svg';\r\nimport addIcon from '../../images/add.svg';\r\nimport editIcon from '../../images/edit.svg';\r\nimport removeIcon from '../../images/remove.svg';\r\nimport './Categories.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions_operator from '../../redux/actions/Operator-actions';\r\nimport * as actions_data from '../../redux/actions/Data-actions';\r\n\r\nclass Categories extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addCategory = this.addCategory.bind(this);\r\n        this.editCategory = this.editCategory.bind(this);\r\n        this.removeCategory = this.removeCategory.bind(this);\r\n        this.disableCurrentAction = this.disableCurrentAction.bind(this);\r\n    }\r\n\r\n    // This function sets/cancels 'ADD' action to state (for Add mode)\r\n    // Triggered by 'ADD' toolbar button\r\n    addCategory() {\r\n        this.disableCurrentAction(null, true);\r\n        this.props.setAction('ADD');\r\n    }\r\n\r\n    // This function sets/cancels 'EDIT' action to state (for Edit mode)\r\n    // Triggered by 'EDIT' toolbar button\r\n    editCategory() {\r\n        if (this.props.categories_data.length > 0) {\r\n            if (this.props.action === 'EDIT') { // Cancel action\r\n                this.props.setAction('');\r\n            } else { // Set new action\r\n                this.disableCurrentAction(null, true);\r\n                this.props.setAction('EDIT');\r\n            }\r\n        } else { // No locations to edit yet\r\n            toast.warn('No categories to edit. Try adding one');\r\n        }\r\n    }\r\n\r\n    // This function sets/cancels 'REMOVE' action to state (for Remove mode)\r\n    // Triggered by 'REMOVE' toolbar button\r\n    removeCategory(e) {\r\n        if (this.props.categories_data.length > 0) {\r\n            if (this.props.action === 'REMOVE') { // Cancel action\r\n                this.props.setAction('');\r\n            } else { // Set new action\r\n                this.disableCurrentAction(null, true);\r\n                this.props.setAction('REMOVE');\r\n            }\r\n        } else { // No locations to remove yet\r\n            toast.warn('No categories to remove. Try adding one');\r\n        }\r\n    }\r\n\r\n    // This function disables any action (ADD/EDIT/REMOVE)\r\n    disableCurrentAction(e, controlled = false) {\r\n        if (controlled || e.target === e.currentTarget) {\r\n            this.props.setAction('');\r\n            this.props.setCategoryDialogState(false);\r\n            this.props.setSelectedCategory('');\r\n            this.props.resetCategoryInput();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"categories\">\r\n                <div className=\"component-header\">\r\n                    <div className=\"component-header-icon-wrapper\">\r\n                        <img src={categoriesIcon} width=\"25\" alt=\"\" /></div>\r\n                    <h1 className=\"heading-component h1\">\r\n                        Categories</h1>\r\n                    <div className=\"component-header-right-margin\"></div>\r\n                </div>\r\n                <div className=\"seperator-2\"></div>\r\n                <div className=\"component-toolbar\">\r\n                    <div className={`custom-button ${this.props.action === 'ADD' ? 'active' : 'inactive'}`} onClick={this.addCategory}>\r\n                        <img src={addIcon} width=\"20\" alt=\"\" />\r\n                        <h3 className=\"custom-heading\">Add</h3>\r\n                    </div>\r\n                    <div className={`custom-button ${this.props.action === 'EDIT' ? 'active' : 'inactive'}`} onClick={this.editCategory}>\r\n                        <img src={editIcon} width=\"20\" alt=\"\" />\r\n                        <h3 className=\"custom-heading\">Edit</h3>\r\n                    </div>\r\n                    <div className={`custom-button ${this.props.action === 'REMOVE' ? 'active' : 'inactive'}`} onClick={this.removeCategory}>\r\n                        <img src={removeIcon} width=\"20\" alt=\"\" />\r\n                        <h3 className=\"custom-heading\">Remove</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"seperator-3\"></div>\r\n                <div className=\"categories-list-container\">\r\n                    {this.props.categories_data.length > 0 ?\r\n                        this.props.categories_data.map((category, i) => {\r\n                            return <Category name={category.name} date={category.date} key={i} disableCurrentAction={this.disableCurrentAction}/>\r\n                        }) :\r\n                        <div className=\"text-block\">No categories yet. Click the 'Add' button above</div>}\r\n                </div>\r\n                {(this.props.action === 'ADD' || (this.props.action === 'EDIT' && this.props.selected_category)) && <CategoryForm closeForm={this.disableCurrentAction} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        action: state.operator.action,\r\n        categories_data: state.data.categories,\r\n        selected_category: state.data.selected_category,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAction: (action) => dispatch(actions_operator.setAction(action)),\r\n        setSelectedCategory: (name) => dispatch(actions_data.setSelectedCategory(name)),\r\n        setCategoryDialogState: (state) => dispatch(actions_data.setCategoryDialogState(state)),\r\n        resetCategoryInput: () => dispatch(actions_data.resetCategoryInput())\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","import React, { Component } from 'react';\nimport Locations from './components/Locations/Locations';\nimport Categories from './components/Categories/Categories';\nimport categoriesIcon from './images/categories.svg';\nimport locationsIcon from './images/locations.svg';\nimport './App.css';\n\nimport { ToastContainer } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport * as actions_operator from './redux/actions/Operator-actions';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.activateScreen = this.activateScreen.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = 'myLocations';\n  }\n\n  // This function activates a screen (for example Categories/Locations)\n  // Called from onClick listeners of the pages' icons\n  activateScreen(ref) {\n\n    let target = ref.current || ref.currentTarget;\n    let nextScreen = target.getAttribute('screen-ref');\n\n    // Only activate an inactive screen\n    if (nextScreen !== this.props.activeScreen) {\n      this.props.updateActiveScreen(nextScreen);\n\n      // Reset 'action' if icon clicked during an action (ADD/EDIT/REMOVE)\n      if (this.props.action !== '') {\n        this.props.resetAction();\n      }\n\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app-body\">\n        <div className=\"ml-container\">\n          <div className=\"component-container\">\n            {this.props.activeScreen === 'Categories' && <Categories />}\n            {this.props.activeScreen === 'Locations' && <Locations />}\n          </div>\n          <div className=\"seperator\"></div>\n          <div className=\"bottom-toolbar\">\n            <div className={`bottom-icon-wrapper ${this.props.activeScreen === 'Categories' ?\n              'active' : 'inactive'}`} onClick={this.activateScreen} screen-ref=\"Categories\">\n              <img src={categoriesIcon} width=\"40\" alt=\"\" className=\"icon-bottom\" />\n              <div className=\"icon-bottom-underline\"></div>\n            </div>\n            <div className={`bottom-icon-wrapper ${this.props.activeScreen === 'Locations' ?\n              'active' : 'inactive'}`} onClick={this.activateScreen} screen-ref=\"Locations\">\n              <img src={locationsIcon} width=\"40\" alt=\"\" className=\"icon-bottom\" />\n              <div className=\"icon-bottom-underline\"></div>\n            </div>\n          </div>\n        </div>\n        <ToastContainer hideProgressBar={true} autoClose={4500} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeScreen: state.operator.activeScreen,\n    action: state.operator.action\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateActiveScreen: (screen) => dispatch(actions_operator.activateScreen(screen)),\n    resetAction: () => dispatch(actions_operator.resetAction())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const operatorReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'ACTIVATE_SCREEN':\r\n            state = { ...state, activeScreen: action.payload };\r\n            break;\r\n        case 'SET_ACTION':\r\n            state = { ...state, action: action.payload };\r\n            break;\r\n        case 'RESET_ACTION':\r\n            state = { ...state, action: '' };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default operatorReducer;","const dataReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD_CATEGORY':\r\n            state = {\r\n                ...state,\r\n                categories: [{\r\n                    name: action.payload,\r\n                    locations: {},\r\n                    date: new Date().toLocaleString()\r\n                }, ...state.categories]\r\n            };\r\n            break;\r\n        case 'ADD_LOCATION':\r\n            state = {\r\n                ...state,\r\n                categories: state.categories.map((val) => {\r\n                    if (val.name === action.payload.category) {\r\n                        let newLocation = {\r\n                            address: action.payload.address,\r\n                            lat: action.payload.lat,\r\n                            lng: action.payload.lng\r\n                        }\r\n                        return { ...val, locations: { ...val.locations, [action.payload.name]: newLocation } };\r\n                    } else {\r\n                        return { ...val };\r\n                    }\r\n                }),\r\n                locations_count: state.locations_count + 1\r\n            };\r\n            break;\r\n        case 'EDIT_CATEGORY':\r\n            state = {\r\n                ...state,\r\n                categories: state.categories.map((val) => {\r\n                    return {\r\n                        ...val, name: val.name === state.selected_category ?\r\n                            action.payload : val.name\r\n                    };\r\n                })\r\n            };\r\n            break;\r\n        case 'EDIT_LOCATION':\r\n            state = {\r\n                ...state,\r\n                categories: state.categories.map((val) => {\r\n                    if (val.name === action.payload.category) {\r\n                        let updatedLocations = { ...val.locations };\r\n                        delete updatedLocations[state.selected_location];\r\n\r\n                        updatedLocations[action.payload.name] = {\r\n                            address: action.payload.address,\r\n                            lat: action.payload.lat,\r\n                            lng: action.payload.lng\r\n                        }\r\n                        val['locations'] = updatedLocations;\r\n                    }\r\n                    return { ...val };\r\n                }),\r\n\r\n            };\r\n            break;\r\n        case 'REMOVE_CATEGORY':\r\n            let numLocations = Object.keys(state.categories.find(category => \r\n                { return (category.name === action.payload); }).locations).length;\r\n\r\n            state = {\r\n                ...state,\r\n                categories: state.categories.filter(val => val.name !== action.payload),\r\n                locations_count: state.locations_count - numLocations\r\n            };\r\n            break;\r\n        case 'REMOVE_LOCATION':\r\n            state = {\r\n                ...state,\r\n                categories: state.categories.map((val) => {\r\n                    if (val.name === state.selected_category) {\r\n                        let updatedLocations = { ...val.locations };\r\n                        delete updatedLocations[state.selected_location];\r\n                        val['locations'] = updatedLocations;\r\n                    }\r\n                    return { ...val };\r\n                }),\r\n                locations_count: state.locations_count - 1\r\n            };\r\n            break;\r\n        case 'RESET_CATEGORY_INPUT':\r\n            state = { ...state, input_category: '' };\r\n            break;\r\n        case 'RESET_LOCATION_INPUT':\r\n            state = { ...state, input_location: {} };\r\n            break;\r\n        case 'SET_SELECTED_CATEGORY':\r\n            state = { ...state, selected_category: action.payload };\r\n            break;\r\n        case 'SET_SELECTED_LOCATION':\r\n            state = { ...state, selected_location: action.payload };\r\n            break;\r\n        case 'SET_UNGROUPED_CATEGPRY':\r\n            state = { ...state, ungrouped_category: action.payload };\r\n            break;\r\n        case 'SET_LOCATION_DIALOG_STATE':\r\n            state = { ...state, is_location_dialog_open: action.payload };\r\n            break;\r\n        case 'SET_CATEGORY_DIALOG_STATE':\r\n            state = { ...state, is_category_dialog_open: action.payload };\r\n            break;\r\n        case 'SET_VIEW_MODE':\r\n            state = { ...state, view_mode: action.payload };\r\n            break;\r\n        case 'UPDATE_CATEGORY_INPUT':\r\n            state = { ...state, input_category: action.payload };\r\n            break;\r\n        case 'UPDATE_LOCATION_INPUT':\r\n            state = { ...state, input_location: action.payload };\r\n            break;\r\n        case 'UPDATE_MAP_POSITION':\r\n            state = { ...state, map_position: action.payload };\r\n            break;\r\n        case 'UPDATE_MAP_ADDRESS':\r\n            state = { ...state, map_address: action.payload };\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default dataReducer;","import { combineReducers, createStore } from 'redux';\r\nimport operatorReducer from './reducers/Operator-reducer';\r\nimport dataReducer from './reducers/Data-reducer';\r\n\r\n// Combine reducers\r\nconst rootReducer = combineReducers({\r\n    operator: operatorReducer,\r\n    data: dataReducer\r\n});\r\n\r\n// Set initial state\r\nconst initialState = {\r\n    operator: {\r\n        activeScreen: 'Categories',\r\n        action: ''\r\n    },\r\n    data: {\r\n        categories: [{\r\n            date: '31.7.2019, 17:11:43',\r\n            locations: {\r\n                'Delaware Beach House': {\r\n                    address: '51 Baltimore Ave, Rehoboth Beach, DE 19971, USA',\r\n                    lat: 38.7171603,\r\n                    lng: -75.0812477,\r\n                },\r\n                'Lincoln City Beach House': {\r\n                    address: '4567 SW Beach Ave, Lincoln City, OR 97367, USA',\r\n                    lat: 44.9319352,\r\n                    lng: -124.02391790000001,\r\n                },\r\n                'Long Island Beach House': {\r\n                    address: '55 S Elmwood Ave, Montauk, NY 11954, USA',\r\n                    lat: 41.0339355,\r\n                    lng: -71.94328710000002\r\n                },\r\n                'Miami Beach House': {\r\n                    address: '200 S Biscayne Blvd, Miami, FL 33131, USA',\r\n                    lat: 25.7721982,\r\n                    lng: -80.1881477\r\n                },\r\n                'Outer Banks Beach House': {\r\n                    address: '42050 Cedar Cir, Avon, NC 27915, USA',\r\n                    lat: 35.3305316,\r\n                    lng: -75.50870980000002\r\n                }\r\n            },\r\n            name: 'My Beach Houses (Example)'\r\n        }],\r\n        locations_count: 5,\r\n        input_category: '',\r\n        view_mode: '',\r\n        input_location: {},\r\n        selected_category: '',\r\n        selected_location: '',\r\n        ungrouped_category: 'My Beach Houses (Example)',\r\n        is_category_dialog_open: false,\r\n        is_location_dialog_open: false\r\n    }\r\n}\r\n\r\n// Set state: if previous state exists in local storage load it, \r\n// otherwise set initialState\r\nconst persistedState = localStorage.getItem('reduxState') ?\r\n    JSON.parse(localStorage.getItem('reduxState')) : initialState;\r\n\r\n// Create store\r\nconst store = createStore(rootReducer, persistedState);\r\n\r\n// Subscribe to store state changes and save each new state to local storage\r\nstore.subscribe(() => {\r\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()));\r\n});\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route, hashHistory } from 'react-router';\nimport App from './components/App/App';\nimport './index.css';\n\nimport { Provider } from 'react-redux'\nimport store from './components/App/redux/App-store'\n\n\n// This component is responsible for assigning Routes to different pages.\n// In our case, we will assign a single Route to App\n// If we want to add more pages in the future, we will assign them a Route from here\nclass Root extends Component {\n    render() {\n        return (\n            // Note that because this app is deployed to GitHub Pages,\n            // we use hashHistory instead of browserHistory because\n            <Router history={hashHistory}>\n                <Route path='/' component={App}></Route>\n                {/* ... More Routes */}\n            </Router>\n        );\n    }\n}\n\nReactDOM.render(<Provider store={store}><Root /></Provider>, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/locations.2077207c.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.b969e9fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.a58d3d11.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.6690bdd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/categories.a8fb9acf.svg\";","module.exports = __webpack_public_path__ + \"static/media/copy.add831dd.svg\";"],"sourceRoot":""}